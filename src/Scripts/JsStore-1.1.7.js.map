{"version":3,"file":"JsStore-1.1.7.js","sourceRoot":"","sources":["../License.ts","../JsStore/Script/enums.ts","../JsStore/Script/interfaces.ts","../JsStore/Script/CommonLogic.ts","../JsStore/Script/UtilsLogic.ts","../JsStore/Script/HelperLogic.ts","../JsStore/Script/Model/Column.ts","../JsStore/Script/Model/Table.ts","../JsStore/Script/Model/DataBase.ts","../JsStore/Script/Business/BaseLogic.ts","../JsStore/Script/Business/CreateDbLogic.ts","../JsStore/Script/Business/DropDbLogic.ts","../JsStore/Script/Business/InsertLogic.ts","../JsStore/Script/Business/OpenDbLogic.ts","../JsStore/Script/Business/ClearLogic.ts","../JsStore/Script/Business/MainLogic.ts","../JsStore/Script/Business/Select/BaseSelectLogic.ts","../JsStore/Script/Business/Select/NotWhereLogic.ts","../JsStore/Script/Business/Select/LikeLogic.ts","../JsStore/Script/Business/Select/WhereLogic.ts","../JsStore/Script/Business/Select/JoinLogic.ts","../JsStore/Script/Business/Select/InstanceLogic.ts","../JsStore/Script/Business/Count/BaseCountLogic.ts","../JsStore/Script/Business/Count/NotWhereLogic.ts","../JsStore/Script/Business/Count/LikeLogic.ts","../JsStore/Script/Business/Count/WhereLogic.ts","../JsStore/Script/Business/Count/InstanceLogic.ts","../JsStore/Script/Business/Update/BaseUpdateLogic.ts","../JsStore/Script/Business/Update/NotWhereLogic.ts","../JsStore/Script/Business/Update/LikeLogic.ts","../JsStore/Script/Business/Update/WhereLogic.ts","../JsStore/Script/Business/Update/InstanceLogic.ts","../JsStore/Script/Business/Delete/BaseDeleteLogic.ts","../JsStore/Script/Business/Delete/NotWhereLogic.ts","../JsStore/Script/Business/Delete/LikeLogic.ts","../JsStore/Script/Business/Delete/WhereLogic.ts","../JsStore/Script/Business/Delete/InstanceLogic.ts","../JsStore/Script/CodeExecutionHelper.ts","../JsStore/Script/JsStoreInstance.ts","../JsStore/Script/DirectCode.ts","../KeyStore/UtilsLogic.ts","../KeyStore/CommonLogic.ts","../KeyStore/Helper.ts","../KeyStore/Business/BaseLogic.ts","../KeyStore/Business/GetLogic.ts","../KeyStore/Business/SetLogic.ts","../KeyStore/Business/RemoveLogic.ts","../KeyStore/Business/InitDbLogic.ts","../KeyStore/Business/MainLogic.ts","../KeyStore/KeyStoreInstance.ts"],"names":[],"mappings":"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","sourcesContent":["/** JsStore.js - v1.1.7 - 20/09/2017\r\n * https://github.com/ujjwalguptaofficial/JsStore\r\n * Copyright (c) 2017 @Ujjwal Gupta; Licensed MIT */","module JsStore {\r\n    export enum ErrorType {\r\n        UndefinedColumn = \"undefined_column\",\r\n        UndefinedValue = \"undefined_value\",\r\n        UndefinedColumnName = \"undefined_column_name\",\r\n        UndefinedColumnValue = \"undefined_column_value\",\r\n        NotArray = \"not_array\",\r\n        NoValueSupplied = \"no_value_supplied\",\r\n        ColumnNotExist = \"column_not_exist\",\r\n        InvalidOp = \"invalid_operator\",\r\n        NullValue = \"null_value\",\r\n        BadDataType = \"bad_data_type\",\r\n        NextJoinNotExist = \"next_join_not_exist\",\r\n        TableNotExist = \"table_not_exist\",\r\n        DbNotExist = \"db_not_exist\",\r\n        IndexedDbUndefined = \"indexeddb_undefined\",\r\n        IndexedDbBlocked = \"indexeddb_blocked\"\r\n    }\r\n\r\n    export enum Occurence {\r\n        First = 'f',\r\n        Last = 'l',\r\n        Any = 'a'\r\n    };\r\n\r\n    export enum WebWorkerStatus {\r\n        Registered = \"registerd\",\r\n        Failed = \"failed\",\r\n        NotStarted = \"not_started\"\r\n    };\r\n\r\n    export enum ConnectionStatus {\r\n        Connected = \"connected\",\r\n        Closed = \"closed\",\r\n        NotStarted = \"not_started\",\r\n        UnableToStart = \"unable_to_start\"\r\n    }\r\n}","module JsStore {\r\n    export interface DbInfo {\r\n        DbName: string,\r\n        Table: {\r\n            Name: string,\r\n            Version: number\r\n        }\r\n    }\r\n\r\n    export interface ISelect {\r\n        From: any,\r\n        Where: any,\r\n        Skip: number,\r\n        Limit: number,\r\n        OnSuccess: Function,\r\n        OnError: Function,\r\n        Order: IOrder\r\n    }\r\n\r\n    export interface IOrder {\r\n        By: string, // Column name\r\n        Type: string\r\n    }\r\n\r\n    export interface ICount {\r\n        From: any,\r\n        Where: any,\r\n        OnSuccess: Function,\r\n        OnError: Function\r\n    }\r\n\r\n    export interface IDelete {\r\n        From: string,\r\n        Where: any,\r\n        OnSuccess: Function,\r\n        OnError: Function\r\n    }\r\n\r\n    export interface IUpdate {\r\n        In: string,\r\n        Set: any,\r\n        Where: any,\r\n        OnSuccess: Function,\r\n        OnError: Function\r\n    }\r\n\r\n    export interface IInsert {\r\n        Into: string,\r\n        Values: Array<any>,\r\n        Return: boolean,\r\n        OnSuccess: Function,\r\n        OnError: Function,\r\n        SkipExtraCheck: boolean\r\n    }\r\n\r\n    export interface ICondition {\r\n        Column: string,\r\n        Value: string,\r\n        Op: string\r\n    }\r\n\r\n    export interface ITableJoin {\r\n        Column: string,\r\n        Table: string,\r\n        Where: any,\r\n        Order: IOrder\r\n        JoinType: string,\r\n        NextJoin: INextJoin\r\n    }\r\n\r\n    export interface ISelectJoin {\r\n        From: IJoin, //IJoin\r\n        Count: boolean,\r\n        Skip: number,\r\n        Limit: number,\r\n        OnSuccess: Function,\r\n        OnError: Function\r\n    }\r\n\r\n    export interface IJoin {\r\n        Table1: ITableJoin,\r\n        Join: string, //inner,left,right,outer\r\n        Table2: ITableJoin\r\n    }\r\n\r\n    export interface INextJoin {\r\n        Table: string,\r\n        Column: string\r\n    }\r\n\r\n    export interface JsStoreStatus {\r\n        ConStatus: ConnectionStatus,\r\n        LastError: string\r\n    }\r\n\r\n    export interface IWebWorkerRequest {\r\n        Name: string,\r\n        Query: any,\r\n        OnSuccess: Function,\r\n        OnError: Function\r\n    }\r\n\r\n    export interface IWebWorkerResult {\r\n        ErrorOccured: boolean;\r\n        ErrorDetails: any;\r\n        ReturnedValue: any;\r\n    }\r\n\r\n}","module JsStore {\r\n    export var EnableLog = false,\r\n        DbVersion: number = 0,\r\n        Status: JsStoreStatus = <JsStoreStatus>{\r\n            ConStatus: ConnectionStatus.NotStarted,\r\n            LastError: \"\"\r\n        }\r\n\r\n    export var throwError = function (error) {\r\n        throw error;\r\n    }\r\n}","module JsStore {\r\n    export interface IError {\r\n        Name: string,\r\n        Message: string\r\n    }\r\n    export class Utils {\r\n        static getError(errorType: ErrorType, errorDetail: any) {\r\n            var Error: IError = {\r\n                Name: errorType,\r\n                Message: ''\r\n            };\r\n            switch (errorType) {\r\n                case ErrorType.NotArray: Error.Message = \"Supplied value is not an array\"; break;\r\n                case ErrorType.UndefinedColumn: Error.Message = \"Column is undefined in Where\"; break;\r\n                case ErrorType.UndefinedValue: Error.Message = \"Value is undefined in Where\"; break;\r\n                case ErrorType.UndefinedColumnName: Error.Message = \"Column name is undefined\"; break;\r\n                case ErrorType.UndefinedColumnValue: Error.Message = \"Column value is undefined\"; break;\r\n                case ErrorType.NoValueSupplied: Error.Message = \"No value supplied\"; break;\r\n                case ErrorType.InvalidOp: Error.Message = \"Invalid Op Value '\" + errorDetail['Op'] + \"'\"; break;\r\n                case ErrorType.ColumnNotExist: Error.Message = \"Column '\" + errorDetail['ColumnName'] + \"' does not exist\";\r\n                    break;\r\n                case ErrorType.NullValue: Error.Message = \"Null value is not allowed for column '\" + errorDetail['ColumnName'] + \"'\";\r\n                    break;\r\n                case ErrorType.BadDataType: Error.Message = \"Supplied value for column '\" + errorDetail['ColumnName'] + \"' does not have valid type\";\r\n                    break;\r\n                case ErrorType.NextJoinNotExist: Error.Message = \"Next join details not supplied\";\r\n                    break;\r\n                case ErrorType.TableNotExist: Error.Message = \"Table '\" + errorDetail['TableName'] + \"' does not exist\";\r\n                    break;\r\n                case ErrorType.DbNotExist: Error.Message = \"Database '\" + errorDetail['DbName'] + \"' does not exist\";\r\n                    break;\r\n                default: console.error('the error type is not defined');\r\n            }\r\n            return Error;\r\n        }\r\n\r\n        static convertObjectintoLowerCase(obj: any) {\r\n            var keys = Object.keys(obj);\r\n            var n = keys.length;\r\n            while (n--) {\r\n                var key = keys[n];\r\n                obj[key.toLowerCase()] = obj[key]\r\n                delete obj[key]\r\n            }\r\n        }\r\n\r\n        /**\r\n         * determine and set the DataBase Type\r\n         * \r\n         * \r\n         * @memberOf MainLogic\r\n         */\r\n        static setDbType = function () {\r\n            (self as any).indexedDB = self.indexedDB || (self as any).mozIndexedDB || (self as any).webkitIndexedDB || (self as any).msIndexedDB;\r\n            if (indexedDB) {\r\n                (self as any).IDBTransaction = (self as any).IDBTransaction || (self as any).webkitIDBTransaction || (self as any).msIDBTransaction;\r\n                (self as any).IDBKeyRange = (self as any).IDBKeyRange || (self as any).webkitIDBKeyRange || (self as any).msIDBKeyRange\r\n            }\r\n            else {\r\n                throwError('Your browser doesnot support IndexedDb');\r\n            }\r\n        }\r\n    }\r\n}\r\n","module JsStore {\r\n\r\n    /**\r\n    * checks whether db exist or not\r\n    * \r\n    * @param {DbInfo} dbInfo \r\n    * @param {Function} callback \r\n    * @param {Function} errCallBack \r\n    */\r\n    export var isDbExist = function (dbInfo: DbInfo, callback: Function, errCallBack: Function) {\r\n        if (Status.ConStatus != ConnectionStatus.UnableToStart) {\r\n            var DbName;\r\n            if (typeof dbInfo == 'string') {\r\n                getDbVersion(dbInfo, function (dbVersion) {\r\n                    callback(Boolean(dbVersion));\r\n                });\r\n            }\r\n            else {\r\n                getDbVersion(dbInfo.DbName, function (dbVersion) {\r\n                    callback(dbInfo.Table.Version <= dbVersion)\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (errCallBack) {\r\n                var Error = <IError>{\r\n                    Name: Status.LastError,\r\n                    Message: ''\r\n                };\r\n                switch (Error.Name) {\r\n                    case ErrorType.IndexedDbBlocked:\r\n                        Error.Message = \"IndexedDB is blocked\"; break;\r\n                    case ErrorType.IndexedDbUndefined:\r\n                        Error.Message = \"IndexedDB is not supported\"; break;\r\n                }\r\n                errCallBack(Error);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * get Db Version\r\n    * \r\n    * @param {string} dbName \r\n    * @param {Function} callback \r\n    */\r\n    export var getDbVersion = function (dbName: string, callback: Function) {\r\n        KeyStore.get(\"JsStore_\" + dbName + '_Db_Version', function (dbVersion) {\r\n            callback(Number(dbVersion));\r\n        });\r\n    }\r\n\r\n    /**\r\n    * get Database Schema\r\n    * \r\n    * @param {string} dbName \r\n    * @param {Function} callback \r\n    */\r\n    export var getDbSchema = function (dbName: string, callback: Function) {\r\n        if (callback) {\r\n            KeyStore.get(\"JsStore_\" + dbName + \"_Schema\", function (result) {\r\n                callback(result);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n    * check value null or not\r\n    * \r\n    * @param {any} value \r\n    * @returns \r\n    */\r\n    export var isNull = function (value) {\r\n        if (value == null) {\r\n            return true;\r\n        } else {\r\n            switch (typeof value) {\r\n                case 'string': return value.length == 0;\r\n                case 'number': return isNaN(value);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n    * Enable log\r\n    * \r\n    */\r\n    export var enableLog = function () {\r\n        EnableLog = true;\r\n    }\r\n\r\n    /**\r\n    * disable log\r\n    * \r\n    */\r\n    export var disableLog = function () {\r\n        EnableLog = false;\r\n    }\r\n\r\n}","module JsStore {\r\n    export module Model {\r\n\r\n        export interface IColumn {\r\n            Name: string;\r\n            AutoIncrement: boolean;\r\n            PrimaryKey: boolean;\r\n            Unique: boolean;\r\n            NotNull: boolean;\r\n            DataType: string;\r\n            Default: any;\r\n        }\r\n\r\n        export class Column implements IColumn {\r\n            Name: string;\r\n            AutoIncrement: boolean;\r\n            PrimaryKey: boolean;\r\n            Unique: boolean;\r\n            NotNull: boolean;\r\n            DataType: string;\r\n            Default: any;\r\n\r\n            constructor(key: IColumn, tableName: string) {\r\n                if (key.Name != null) {\r\n                    this.Name = key.Name;\r\n                }\r\n                else {\r\n                    throwError(\"Column Name is not defined for table:\" + tableName);\r\n                }\r\n                this.AutoIncrement = key.AutoIncrement != null ? key.AutoIncrement : false;\r\n                this.PrimaryKey = key.PrimaryKey != null ? key.PrimaryKey : false;\r\n                this.Unique = key.Unique != null ? key.Unique : false;\r\n                this.NotNull = key.NotNull != null ? key.NotNull : false;\r\n                this.DataType = key.DataType != null ? key.DataType : (key.AutoIncrement ? 'number' : null);\r\n                this.Default = key.Default;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n","\r\nmodule JsStore {\r\n\r\n    export module Model {\r\n\r\n        export interface ITable {\r\n            Name: string;\r\n            Columns: Array<IColumn>;\r\n            Version: number;\r\n        }\r\n\r\n        export class Table implements ITable {\r\n            Name: string = \"\";\r\n            Columns: Array<Column> = [];\r\n            Version: number;\r\n            //internal Members\r\n            RequireDelete: boolean = false;\r\n            RequireCreation: boolean = false;\r\n            PrimaryKey: string = \"\";\r\n\r\n            constructor(table: ITable, dbName: string) {\r\n                this.Name = table.Name;\r\n                this.Version = table.Version == undefined ? 1 : table.Version;\r\n                var That = this;\r\n                table.Columns.forEach(function (item) {\r\n                    That.Columns.push(new Column(item, table.Name));\r\n                })\r\n\r\n                this.setRequireDelete(dbName);\r\n                this.setDbVersion(dbName);\r\n                this.setPrimaryKey(dbName);\r\n            }\r\n\r\n            //private methods\r\n\r\n            private setPrimaryKey(dbName) {\r\n                var That = this;\r\n                this.Columns.forEach(function (item) {\r\n                    if (item.PrimaryKey) {\r\n                        That.PrimaryKey = item.Name;\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            private setRequireDelete(dbName: string) {\r\n                var That = this;\r\n                KeyStore.get(\"JsStore_\" + dbName + \"_\" + this.Name + \"_Version\", function (tableVersion) {\r\n                    if (tableVersion == null) {\r\n                        That.RequireCreation = true;\r\n                    }\r\n                    //mark only table which has version greater than store version\r\n                    else if (tableVersion < That.Version) {\r\n                        That.RequireDelete = true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            private setDbVersion(dbName: string) {\r\n                var That = this;\r\n                DbVersion = DbVersion > That.Version ? DbVersion : That.Version;\r\n                //setting db version\r\n                KeyStore.set('JsStore_' + dbName + '_Db_Version', DbVersion)\r\n                    //setting table version\r\n                    .set(\"JsStore_\" + dbName + \"_\" + That.Name + \"_Version\", DbVersion);\r\n                That.Version = DbVersion;\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n","\r\nmodule JsStore {\r\n    export module Model {\r\n        export interface IDataBase {\r\n            Name: string;\r\n            Tables: Array<ITable>;\r\n        }\r\n\r\n        export class DataBase implements IDataBase {\r\n            Name: string;\r\n            Tables: Array<Table> = [];\r\n\r\n            constructor(dataBase: IDataBase) {\r\n                var That = this;\r\n                this.Name = dataBase.Name;\r\n                dataBase.Tables.forEach(function (item) {\r\n                    That.Tables.push(new Table(item, That.Name));\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export class Base {\r\n            Error: IError;\r\n            ErrorOccured: boolean = false;\r\n            ErrorCount = 0;\r\n            RowAffected = 0;\r\n            OnSuccess: Function;\r\n            OnError: Function;\r\n            Transaction: IDBTransaction;\r\n            ObjectStore: IDBObjectStore;\r\n            Query;\r\n\r\n            protected onErrorOccured = function (e, customError = false) {\r\n                ++this.ErrorCount;\r\n                if (this.ErrorCount == 1) {\r\n                    if (this.OnError != null) {\r\n                        if (!customError) {\r\n                            var Error = <IError>{\r\n                                Name: (e as any).target.error.name,\r\n                                Message: (e as any).target.error.message\r\n                            }\r\n                            this.OnError(Error);\r\n                        }\r\n                        else {\r\n                            this.OnError(e);\r\n                        }\r\n                        if (EnableLog) {\r\n                            console.error(Error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            protected onTransactionTimeout = function (e) {\r\n                console.log('transaction timed out');\r\n            }\r\n\r\n            protected onExceptionOccured = function (ex: DOMException, info) {\r\n                switch (ex.name) {\r\n                    case 'NotFoundError':\r\n                        var Error = Utils.getError(ErrorType.TableNotExist, info);\r\n                        throwError(Error);\r\n                    default: console.error(ex);\r\n                }\r\n            }\r\n\r\n            /**\r\n            * For matching the different column value existance\r\n            * \r\n            * @private\r\n            * @param {any} where \r\n            * @param {any} value \r\n            * @returns \r\n            * \r\n            * @memberOf SelectLogic\r\n            */\r\n            protected checkForWhereConditionMatch(rowValue) {\r\n                var Where = this.Query.Where,\r\n                    Status = true;\r\n\r\n\r\n                var checkIn = function (column, value) {\r\n                    var Values = Where[column].In;\r\n                    for (var i = 0, length = Values.length; i < length; i++) {\r\n                        if (Values[i] == value) {\r\n                            Status = true;\r\n                            break;\r\n                        }\r\n                        else {\r\n                            Status = false;\r\n                        }\r\n                    };\r\n                },\r\n                    checkLike = function (column, value) {\r\n                        var Values = Where[column].Like.split('%'),\r\n                            CompSymbol: Occurence,\r\n                            CompValue,\r\n                            SymbolIndex;\r\n                        if (Values[1]) {\r\n                            CompValue = Values[1];\r\n                            CompSymbol = Values.length > 2 ? Occurence.Any : Occurence.Last;\r\n                        }\r\n                        else {\r\n                            CompValue = Values[0];\r\n                            CompSymbol = Occurence.First;\r\n                        }\r\n                        value = value.toLowerCase();\r\n                        SymbolIndex = value.indexOf(CompValue.toLowerCase())\r\n                        switch (CompSymbol) {\r\n                            case Occurence.Any: if (SymbolIndex < 0) {\r\n                                Status = false;\r\n                            }; break;\r\n                            case Occurence.First: if (SymbolIndex > 0 || SymbolIndex < 0) {\r\n                                Status = false;\r\n                            }; break;\r\n                            default: if (SymbolIndex(CompValue) < value.length - 1) {\r\n                                Status = false;\r\n                            };\r\n                        }\r\n                    },\r\n                    checkComparisionOp = function (column, value, symbol) {\r\n                        var CompareValue = Where[column][symbol];\r\n                        switch (symbol) {\r\n                            //greater than\r\n                            case '>': if (CompareValue <= value) {\r\n                                Status = false;\r\n                            }; break;\r\n                            //less than\r\n                            case '<': if (CompareValue >= value) {\r\n                                Status = false;\r\n                            }; break;\r\n                            //less than equal\r\n                            case '<=': if (value > CompareValue) {\r\n                                Status = false;\r\n                            }; break;\r\n                            //greather than equal\r\n                            case '>=': if (value < CompareValue) {\r\n                                Status = false;\r\n                            }; break;\r\n                            //between\r\n                            case '-': if (value < CompareValue.Low || value > CompareValue.High) {\r\n                                Status = false;\r\n                            }; break;\r\n                        }\r\n                    },\r\n                    checkOr = function (column, value) {\r\n                        var OrData = Where[column];\r\n                        for (var prop in OrData) {\r\n                            if (value[prop] && value[prop] == OrData[prop]) {\r\n                                //skip everything when this matches\r\n                                return true;\r\n                            }\r\n                        }\r\n                    };\r\n                for (var Column in Where) {\r\n                    var ColumnValue = Where[Column];\r\n                    if (Status) {\r\n                        if (typeof ColumnValue == 'object') {\r\n                            for (var key in ColumnValue) {\r\n                                if (Status) {\r\n                                    switch (key) {\r\n                                        case 'In': checkIn(Column, rowValue[Column]); break;\r\n                                        case 'Like': checkLike(Column, rowValue[Column]); break;\r\n                                        case '-':\r\n                                        case '>':\r\n                                        case '<':\r\n                                        case '>=':\r\n                                        case '<=':\r\n                                            checkComparisionOp(Column, rowValue[Column], key); break;\r\n                                        // case 'Or': checkOr(Column, rowValue[Column]); break;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            var CompareValue = rowValue[Column];\r\n                            if (ColumnValue != CompareValue) {\r\n                                Status = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n\r\n                }\r\n                return Status;\r\n            }\r\n\r\n            protected getTable = function (tableName: string) {\r\n                var CurrentTable: Table,\r\n                    That = this;\r\n                ActiveDataBase.Tables.every(function (table) {\r\n                    if (table.Name == tableName) {\r\n                        CurrentTable = table;\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                return CurrentTable;\r\n            }\r\n\r\n            protected getKeyRange = function (value, op) {\r\n                var KeyRange: IDBKeyRange;\r\n                switch (op) {\r\n                    case '-': KeyRange = IDBKeyRange.bound(value.Low, value.High, false, false); break;\r\n                    case '>': KeyRange = IDBKeyRange.lowerBound(value, true); break;\r\n                    case '>=': KeyRange = IDBKeyRange.lowerBound(value); break;\r\n                    case '<': KeyRange = IDBKeyRange.upperBound(value, true); break;\r\n                    case '<=': KeyRange = IDBKeyRange.upperBound(value); break;\r\n                    default: KeyRange = IDBKeyRange.only(value); break;\r\n                }\r\n                return KeyRange;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export class CreateDb {\r\n            constructor(dbVersion, onSuccess: Function, onError: Function) {\r\n                var That = this,\r\n                    DbCreatedList = [],\r\n                    DbRequest = indexedDB.open(ActiveDataBase.Name, dbVersion);\r\n\r\n                DbRequest.onerror = function (event) {\r\n                    if (onError != null) {\r\n                        onError((event as any).target.error);\r\n                    }\r\n                };\r\n\r\n                DbRequest.onsuccess = function (event) {\r\n                    Status.ConStatus = ConnectionStatus.Connected;\r\n                    DbConnection = DbRequest.result;\r\n                    DbConnection.onclose = function () {\r\n                        Status.ConStatus = ConnectionStatus.Closed;\r\n                        Status.LastError = \"Connection Closed\";\r\n                    }\r\n\r\n                    DbConnection.onversionchange = function (e) {\r\n                        if (e.newVersion === null) { // An attempt is made to delete the db\r\n                            e.target.close(); // Manually close our connection to the db\r\n                        }\r\n                    };\r\n\r\n                    DbConnection.onerror = function (e) {\r\n                        Status.LastError = \"Error occured in connection :\" + e.target.result;\r\n                    }\r\n\r\n                    DbConnection.onabort = function (e) {\r\n                        Status.ConStatus = ConnectionStatus.Closed;\r\n                        Status.LastError = \"Connection aborted\";\r\n                    }\r\n\r\n                    if (onSuccess != null) {\r\n                        onSuccess(DbCreatedList);\r\n                    }\r\n                    //save dbSchema in keystore\r\n                    KeyStore.set(\"JsStore_\" + ActiveDataBase.Name + \"_Schema\", ActiveDataBase);\r\n                };\r\n\r\n                DbRequest.onupgradeneeded = function (event) {\r\n                    var db = (<any>event).target.result;\r\n                    ActiveDataBase.Tables.forEach(function (item) {\r\n                        if (item.RequireDelete) {\r\n                            // Delete the old datastore.    \r\n                            if (db.objectStoreNames.contains(item.Name)) {\r\n                                db.deleteObjectStore(item.Name);\r\n                            }\r\n                            createObjectStore(db, item);\r\n                        }\r\n                        else if (item.RequireCreation) {\r\n                            createObjectStore(db, item);\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n                var createObjectStore = function (dbConnection, item: Table) {\r\n                    try {\r\n                        if (item.PrimaryKey.length > 0) {\r\n                            var Store = dbConnection.createObjectStore(item.Name, {\r\n                                keyPath: item.PrimaryKey\r\n                            });\r\n                            item.Columns.forEach(function (column: Column) {\r\n                                if (column.PrimaryKey) {\r\n                                    Store.createIndex(column.Name, column.Name, { unique: true });\r\n                                }\r\n                                else {\r\n                                    Store.createIndex(column.Name, column.Name, { unique: column.Unique });\r\n                                }\r\n\r\n                                if (column.AutoIncrement) {\r\n                                    KeyStore.set(\"JsStore_\" + ActiveDataBase.Name + \"_\" + item.Name + \"_\" + column.Name + \"_Value\", 0);\r\n                                }\r\n                            })\r\n                        }\r\n                        else {\r\n                            var Store = dbConnection.createObjectStore(item.Name, {\r\n                                autoIncrement: true\r\n                            });\r\n                            item.Columns.forEach(function (column: Column) {\r\n                                Store.createIndex(column.Name, column.Name, { unique: column.Unique });\r\n                                if (column.AutoIncrement) {\r\n                                    KeyStore.set(\"JsStore_\" + ActiveDataBase.Name + \"_\" + item.Name + \"_\" + column.Name + \"_Value\", 0);\r\n                                }\r\n                            })\r\n                        }\r\n                        DbCreatedList.push(item.Name);\r\n                        //setting the table version\r\n                        KeyStore.set(\"JsStore_\" + ActiveDataBase.Name + \"_\" + item.Name + \"_Version\", item.Version);\r\n                    }\r\n                    catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export class DropDb {\r\n            constructor(name: string, onSuccess: Function, onError: Function) {\r\n\r\n                var DbDropRequest = indexedDB.deleteDatabase(name);\r\n                DbDropRequest.onblocked = function () {\r\n                    if (onError != null) {\r\n                        onError(\"delete database is in progress\");\r\n                    };\r\n                };\r\n                DbDropRequest.onerror = function (e) {\r\n                    if (onError != null) {\r\n                        onError((event as any).target.error);\r\n                    }\r\n                }\r\n                DbDropRequest.onsuccess = function () {\r\n                    Status.ConStatus = ConnectionStatus.Closed;\r\n                    KeyStore.remove('JsStore_' + ActiveDataBase.Name + '_Db_Version');\r\n                    ActiveDataBase.Tables.forEach(function (table: Model.Table) {\r\n                        KeyStore.remove(\"JsStore_\" + ActiveDataBase.Name + \"_\" + table.Name + \"_Version\");\r\n                        table.Columns.forEach(function (column: Column) {\r\n                            if (column.AutoIncrement) {\r\n                                KeyStore.remove(\"JsStore_\" + ActiveDataBase.Name + \"_\" + table.Name + \"_\" + column.Name + \"_Value\");\r\n                            }\r\n                        });\r\n                    });\r\n                    KeyStore.remove(\"JsStore_\" + ActiveDataBase.Name + \"_Schema\");\r\n                    if (onSuccess != null) {\r\n                        onSuccess();\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export class Insert extends Base {\r\n            ValuesAffected = [];\r\n            Query: IInsert;\r\n            ValuesIndex = 0;\r\n            Table: Model.ITable;\r\n            public onTransactionCompleted = function () {\r\n                if (this.OnSuccess != null) {\r\n                    this.OnSuccess(this.Query.Return ? this.ValuesAffected : this.RowAffected);\r\n                }\r\n            }\r\n\r\n            private checkAndModifyValues = function (callBack) {\r\n                var That = this,\r\n                    checkInternal = function (value) {\r\n                        if (value) {\r\n                            That.checkAndModifyValue(value, function () {\r\n                                if (!That.ErrorOccured) {\r\n                                    checkInternal(That.Query.Values[That.ValuesIndex++]);\r\n                                }\r\n                                else {\r\n                                    That.onErrorOccured(That.Error, true);\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            callBack();\r\n                        }\r\n                    };\r\n                checkInternal(this.Query.Values[this.ValuesIndex++]);\r\n            }\r\n\r\n            private insertData = function () {\r\n                var That = this,\r\n                    IsReturn = this.Query.Return,\r\n                    insertDataintoTable = function (value) {\r\n                        if (value) {\r\n                            var AddResult = That.ObjectStore.add(value);\r\n                            AddResult.onerror = function (e) {\r\n                                That.onErrorOccured(e);\r\n                            }\r\n                            AddResult.onsuccess = function (e) {\r\n                                if (IsReturn) {\r\n                                    That.ValuesAffected.push(value);\r\n                                }\r\n                                else {\r\n                                    ++That.RowAffected;\r\n                                }\r\n                                insertDataintoTable(That.Query.Values[That.ValuesIndex++]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                That.ValuesIndex = 0;\r\n                That.Transaction = DbConnection.transaction([That.Query.Into], \"readwrite\");\r\n                That.ObjectStore = That.Transaction.objectStore(That.Query.Into);\r\n                That.Transaction.oncomplete = function (e) {\r\n                    That.onTransactionCompleted();\r\n                }\r\n                insertDataintoTable(this.Query.Values[That.ValuesIndex++]);\r\n            }\r\n\r\n            constructor(query: IInsert, onSuccess: Function, onError: Function) {\r\n                super();\r\n                try {\r\n                    this.Query = query;\r\n                    this.OnSuccess = onSuccess;\r\n                    this.OnError = onError;\r\n                    var That = this;\r\n                    this.Table = this.getTable(query.Into);\r\n                    if (this.Table) {\r\n                        if (!this.Query.SkipExtraCheck) {\r\n                            this.checkAndModifyValues(function () {\r\n                                That.insertData();\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.insertData();\r\n                        }\r\n                    }\r\n                    else {\r\n                        var Error = Utils.getError(ErrorType.TableNotExist, { TableName: query.Into })\r\n                        throwError(Error);\r\n                    }\r\n                }\r\n                catch (ex) {\r\n                    this.onExceptionOccured(ex, { TableName: query.Into });\r\n                }\r\n            }\r\n\r\n            /**\r\n             * check the value based on defined schema and modify or create the value\r\n             * \r\n             * @private\r\n             * @param {any} value \r\n             * @param {string} tableName \r\n             * \r\n             * @memberof InsertLogic\r\n             */\r\n            private checkAndModifyValue(value, callBack: Function) {\r\n                var That = this,\r\n                    TableName = this.Table.Name,\r\n                    Index = 0,\r\n                    checkAndModifyInternal = function (column) {\r\n                        if (column) {\r\n                            var onValidationError = function (error: ErrorType, details: any) {\r\n                                That.ErrorOccured = true;\r\n                                That.Error = Utils.getError(error, details);\r\n                            },\r\n                                CheckNotNullAndDataType = function () {\r\n                                    //check not null schema\r\n                                    if (column.NotNull && isNull(value[column.Name])) {\r\n                                        onValidationError(ErrorType.NullValue, { ColumnName: column.Name });\r\n                                    }\r\n                                    //check datatype\r\n                                    else if (column.DataType && typeof value[column.Name] != column.DataType) {\r\n                                        onValidationError(ErrorType.BadDataType, { ColumnName: column.Name });\r\n                                    }\r\n                                    checkAndModifyInternal(That.Table.Columns[Index++]);\r\n                                };\r\n                            if (!That.ErrorOccured) {\r\n                                //check auto increment scheme\r\n                                if (column.AutoIncrement) {\r\n                                    KeyStore.get(\"JsStore_\" + ActiveDataBase.Name + \"_\" + TableName + \"_\" + column.Name + \"_Value\", function (columnValue: number) {\r\n                                        value[column.Name] = ++columnValue;\r\n                                        KeyStore.set(\"JsStore_\" + ActiveDataBase.Name + \"_\" + TableName + \"_\" + column.Name + \"_Value\", columnValue);\r\n                                        CheckNotNullAndDataType();\r\n                                    });\r\n                                }\r\n                                else if (column.Default && value[column.Name] == null) { //check Default Schema\r\n                                    value[column.Name] = column.Default;\r\n                                    CheckNotNullAndDataType();\r\n                                }\r\n                                else {\r\n                                    CheckNotNullAndDataType();\r\n                                }\r\n                            }\r\n                            else {\r\n                                callBack();\r\n                            }\r\n                        }\r\n                        else {\r\n                            callBack();\r\n                        }\r\n                    }\r\n                checkAndModifyInternal(That.Table.Columns[Index++]);\r\n            }\r\n        }\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export class OpenDb {\r\n            constructor(dbVersion, onSuccess: Function, onError: Function) {\r\n                if (ActiveDataBase.Name.length > 0) {\r\n                    var DbRequest = indexedDB.open(ActiveDataBase.Name, dbVersion),\r\n                        That = this;\r\n                    DbRequest.onerror = function (event) {\r\n                        if (onError != null) {\r\n                            onError((event as any).target.error);\r\n                        }\r\n                    };\r\n\r\n                    DbRequest.onsuccess = function (event) {\r\n                        Status.ConStatus = ConnectionStatus.Connected;\r\n                        DbConnection = DbRequest.result;\r\n                        DbConnection.onclose = function () {\r\n                            Status.ConStatus = ConnectionStatus.Closed;\r\n                            Status.LastError = \"Connection Closed, trying to reconnect\";\r\n                        }\r\n\r\n                        DbConnection.onversionchange = function (e) {\r\n                            if (e.newVersion === null) { // An attempt is made to delete the db\r\n                                e.target.close(); // Manually close our connection to the db\r\n                            }\r\n                        };\r\n\r\n                        DbConnection.onerror = function (e) {\r\n                            Status.LastError = \"Error occured in connection :\" + e.target.result;\r\n                        }\r\n\r\n                        DbConnection.onabort = function (e) {\r\n                            Status.ConStatus = ConnectionStatus.Closed;\r\n                            Status.LastError = \"Connection Aborted\";\r\n                        }\r\n\r\n                        if (onSuccess != null) {\r\n                            onSuccess();\r\n                        }\r\n                    };\r\n                }\r\n                else {\r\n                    var Error = \"Database name is not supplied.\";\r\n                    throwError(Error);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export class Clear extends Base {\r\n            constructor(tableName: string, onSuccess: Function, onError: Function) {\r\n                super();\r\n                var That = this,\r\n                    ObjectStore: IDBObjectStore = DbConnection.transaction([tableName], \"readwrite\").objectStore(tableName)\r\n                    , ClearRequest = ObjectStore.clear();\r\n\r\n                ClearRequest.onsuccess = function (e) {\r\n                    var CurrentTable = That.getTable(tableName);\r\n                    CurrentTable.Columns.forEach(function (column: Column) {\r\n                        if (column.AutoIncrement) {\r\n                            KeyStore.remove(\"JsStore_\" + ActiveDataBase.Name + \"_\" + tableName + \"_\" + column.Name + \"_Value\");\r\n                        }\r\n                    });\r\n                    if (onSuccess != null) {\r\n                        onSuccess();\r\n                    }\r\n                }\r\n\r\n                ClearRequest.onerror = function (e) {\r\n                    if (onError != null) {\r\n                        onError();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","\r\nmodule JsStore {\r\n    export module Business {\r\n        export var DbConnection,\r\n            ActiveDataBase: DataBase;\r\n\r\n        export class Main {\r\n            OnSuccess: Function;\r\n            constructor(onSuccess = null) {\r\n                this.OnSuccess = onSuccess;\r\n            }\r\n\r\n            public checkConnectionAndExecuteLogic = function (request: IWebWorkerRequest) {\r\n                if (EnableLog) {\r\n                    console.log('checking connection and executing request:' + request.Name);\r\n                }\r\n                if (request.Name == 'create_db' || request.Name == 'open_db') {\r\n                    this.executeLogic(request);\r\n                }\r\n                else {\r\n                    if (Status.ConStatus == ConnectionStatus.Connected) {\r\n                        this.executeLogic(request);\r\n                    }\r\n                    else if (Status.ConStatus == ConnectionStatus.NotStarted) {\r\n                        var That = this;\r\n                        setTimeout(function () {\r\n                            That.checkConnectionAndExecuteLogic(request);\r\n                        }, 100);\r\n                    }\r\n                    else if (Status.ConStatus == ConnectionStatus.Closed) {\r\n                        var That = this;\r\n                        this.openDb(ActiveDataBase.Name, function () {\r\n                            That.checkConnectionAndExecuteLogic(request);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            private returnResult = function (result) {\r\n                if (this.OnSuccess) {\r\n                    this.OnSuccess(result);\r\n                }\r\n                else {\r\n                    (self as any).postMessage(result);\r\n                }\r\n            }\r\n\r\n            private executeLogic = function (request: IWebWorkerRequest) {\r\n                var That = this,\r\n                    OnSuccess = function (results) {\r\n                        That.returnResult(<IWebWorkerResult>{\r\n                            ReturnedValue: results\r\n                        });\r\n                    },\r\n                    OnError = function (err) {\r\n                        That.returnResult(<IWebWorkerResult>{\r\n                            ErrorOccured: true,\r\n                            ErrorDetails: err\r\n                        });\r\n                    }\r\n\r\n                switch (request.Name) {\r\n                    case 'select':\r\n                        this.select(request.Query, OnSuccess, OnError);\r\n                        break;\r\n                    case 'insert': this.insert(request.Query, OnSuccess, OnError);\r\n                        break;\r\n                    case 'update': this.update(request.Query, OnSuccess, OnError);\r\n                        break;\r\n                    case 'delete': this.delete(request.Query, OnSuccess, OnError);\r\n                        break;\r\n                    case 'create_db': this.createDb(request.Query, OnSuccess, OnError);\r\n                        break;\r\n                    case 'clear': this.clear(request.Query, OnSuccess, OnError);\r\n                        break;\r\n                    case 'drop_db': this.dropDb(OnSuccess, OnError);\r\n                        break;\r\n                    case 'count': this.count(request.Query, OnSuccess, OnError);\r\n                        break;\r\n                    case 'open_db': this.openDb(request.Query, OnSuccess, OnError);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            openDb = function (dbName, onSuccess: Function, onError: Function) {\r\n                KeyStore.get(\"JsStore_\" + dbName + '_Db_Version', function (dbVersion) {\r\n                    if (dbVersion != null) {\r\n                        KeyStore.get(\"JsStore_\" + dbName + \"_Schema\", function (result) {\r\n                            ActiveDataBase = result;\r\n                            new OpenDb(dbVersion, onSuccess, onError);\r\n                        });\r\n                    }\r\n                    else {\r\n                        var Error = Utils.getError(ErrorType.DbNotExist, { DbName: dbName });\r\n                        throw Error;\r\n                    }\r\n                });\r\n            }\r\n\r\n            public closeDb = function () {\r\n                if (Status.ConStatus == ConnectionStatus.Connected) {\r\n                    DbConnection.close();\r\n                }\r\n            }\r\n\r\n            public dropDb = function (onSuccess: Function, onError: Function) {\r\n                new DropDb(ActiveDataBase.Name, onSuccess, onError);\r\n            }\r\n\r\n            public update = function (query: IUpdate, onSuccess: Function, onError: Function) {\r\n                new Update.Instance(query, onSuccess, onError);\r\n            }\r\n\r\n            public insert = function (query: IInsert, onSuccess: Function, onError: Function) {\r\n                if (!Array.isArray(query.Values)) {\r\n                    throwError(\"Value should be array :- supplied value is not array\");\r\n                }\r\n                else {\r\n                    new Insert(query, onSuccess, onError);\r\n                }\r\n            }\r\n\r\n            public delete = function (query: IDelete, onSuccess: Function, onError: Function) {\r\n                new Delete.Instance(query, onSuccess, onError);\r\n            }\r\n\r\n            public select = function (query, onSuccess: Function, onError: Function) {\r\n                if (typeof query.From === 'object') {\r\n                    new Select.Join(<ISelectJoin>query, onSuccess, onError);\r\n                }\r\n                else {\r\n                    new Select.Instance(query, onSuccess, onError);\r\n                }\r\n            }\r\n\r\n            public count = function (query, onSuccess: Function, onError: Function) {\r\n                if (typeof query.From === 'object') {\r\n                    query['Count'] = true;\r\n                    new Select.Join(query, onSuccess, onError);\r\n                }\r\n                else {\r\n                    new Count.Instance(query, onSuccess, onError);\r\n                }\r\n            }\r\n\r\n            public createDb = function (dataBase: Model.IDataBase, onSuccess: Function, onError: Function) {\r\n                var That = this;\r\n                KeyStore.get(\"JsStore_\" + dataBase.Name + \"_Db_Version\", function (version) {\r\n                    DbVersion = version;\r\n                    ActiveDataBase = new Model.DataBase(dataBase);\r\n                    var createDbInternal = function () {\r\n                        setTimeout(function () {\r\n                            var LastTable = (<Model.ITable>ActiveDataBase.Tables[ActiveDataBase.Tables.length - 1]);\r\n                            KeyStore.get(\"JsStore_\" + ActiveDataBase.Name + \"_\" + LastTable.Name + \"_Version\", function (version) {\r\n                                if (version == LastTable.Version) {\r\n                                    new CreateDb(DbVersion, onSuccess, onError)\r\n                                }\r\n                                else {\r\n                                    createDbInternal();\r\n                                }\r\n                            });\r\n                        }, 200);\r\n                    }\r\n                    createDbInternal();\r\n                });\r\n\r\n            }\r\n\r\n            public clear = function (tableName: string, onSuccess: Function, onError: Function) {\r\n                new Clear(tableName, onSuccess, onError);\r\n            }\r\n        }\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export module Select {\r\n            export class BaseSelect extends Base {\r\n                Results = [];\r\n                SendResultFlag: Boolean = true;\r\n                Sorted: boolean = false;\r\n                SkipRecord;\r\n                LimitRecord;\r\n            }\r\n        }\r\n    }\r\n}","module JsStore {\r\n    export module Business {\r\n        export module Select {\r\n            export class NotWhere extends BaseSelect {\r\n\r\n                protected executeWhereUndefinedLogic = function () {\r\n                    var That = this,\r\n                        CursorOpenRequest,\r\n                        executeSkipAndLimit = function () {\r\n                            var RecordSkipped = false;\r\n                            CursorOpenRequest.onsuccess = function (e) {\r\n                                var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                                if (Cursor) {\r\n                                    if (RecordSkipped && That.Results.length != That.LimitRecord) {\r\n                                        That.Results.push(Cursor.value);\r\n                                        Cursor.continue();\r\n                                    }\r\n                                    else {\r\n                                        RecordSkipped = true;\r\n                                        Cursor.advance(That.SkipRecord);\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        executeSkip = function () {\r\n                            var RecordSkipped = false;\r\n                            CursorOpenRequest.onsuccess = function (e) {\r\n                                var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                                if (Cursor) {\r\n                                    if (RecordSkipped) {\r\n                                        That.Results.push(Cursor.value);\r\n                                        Cursor.continue();\r\n                                    }\r\n                                    else {\r\n                                        RecordSkipped = true;\r\n                                        Cursor.advance(That.SkipRecord);\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        executeSimple = function () {\r\n                            CursorOpenRequest.onsuccess = function (e) {\r\n                                var Cursor = (<any>e).target.result;\r\n                                if (Cursor) {\r\n                                    That.Results.push(Cursor.value);\r\n                                    (Cursor as any).continue();\r\n                                }\r\n\r\n                            }\r\n                        },\r\n                        executeLimit = function () {\r\n                            CursorOpenRequest.onsuccess = function (e) {\r\n                                var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                                if (Cursor && That.Results.length != That.LimitRecord) {\r\n                                    That.Results.push(Cursor.value);\r\n                                    Cursor.continue();\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                    if (this.Query.Order && this.Query.Order.By) {\r\n                        if (That.ObjectStore.indexNames.contains(this.Query.Order.By)) {\r\n                            var OrderType = this.Query.Order.Type && this.Query.Order.Type.toLowerCase() == 'desc' ? 'prev' : 'next';\r\n                            this.Sorted = true;\r\n                            CursorOpenRequest = this.ObjectStore.index(That.Query.Order.By).openCursor(null, OrderType);\r\n                        }\r\n                        else {\r\n                            var Error = Utils.getError(ErrorType.ColumnNotExist, { ColumnName: this.Query.Order.By });\r\n                            throwError(Error);\r\n                        }\r\n                    }\r\n                    else {\r\n                        CursorOpenRequest = this.ObjectStore.openCursor();\r\n                    }\r\n\r\n                    if (this.SkipRecord && this.LimitRecord) {\r\n                        executeSkipAndLimit();\r\n                    }\r\n                    else if (this.SkipRecord) {\r\n                        executeSkip();\r\n                    }\r\n                    else if (this.LimitRecord) {\r\n                        executeLimit();\r\n                    }\r\n                    else {\r\n                        executeSimple();\r\n                    }\r\n\r\n                    CursorOpenRequest.onerror = function (e) {\r\n                        That.ErrorOccured = true;\r\n                        That.onErrorOccured(e);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export module Select {\r\n            export class Like extends NotWhere {\r\n                CompSymbol: Occurence;\r\n                CompValue;\r\n                Column;\r\n                CheckFlag = false;\r\n\r\n                private filterOnOccurence = function (value) {\r\n                    var Found = false,\r\n                        Value = value[this.Column].toLowerCase();\r\n                    switch (this.CompSymbol) {\r\n                        case Occurence.Any: if (Value.indexOf(this.CompValue) >= 0) {\r\n                            Found = true;\r\n                        }; break;\r\n                        case Occurence.First: if (Value.indexOf(this.CompValue) == 0) {\r\n                            Found = true;\r\n                        }; break;\r\n                        default: if (Value.lastIndexOf(this.CompValue) == Value.length - 1) {\r\n                            Found = true;\r\n                        };\r\n                    }\r\n                    return Found;\r\n                }\r\n\r\n                private executeSkipAndLimit = function () {\r\n                    var Skip = this.SkipRecord,\r\n                        That = this;\r\n                    this.CursorOpenRequest.onsuccess = function (e) {\r\n                        var Cursor: IDBCursorWithValue = (<any>e).target.result,\r\n                            skipOrPush = function () {\r\n                                if (Skip == 0) {\r\n                                    That.Results.push(Cursor.value);\r\n                                }\r\n                                else {\r\n                                    --Skip;\r\n                                }\r\n                            };\r\n                        if (That.Results.length != That.LimitRecord && Cursor) {\r\n                            if (!That.CheckFlag && That.filterOnOccurence(Cursor.value)) {\r\n                                skipOrPush();\r\n                            }\r\n                            else if (That.filterOnOccurence(Cursor.value) &&\r\n                                That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                skipOrPush();\r\n                            }\r\n                            Cursor.continue();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                private executeSkip = function () {\r\n                    var Skip = this.SkipRecord,\r\n                        That = this;\r\n                    this.CursorOpenRequest.onsuccess = function (e) {\r\n                        var Cursor: IDBCursorWithValue = (<any>e).target.result,\r\n                        skipOrPush = function () {\r\n                            if (Skip == 0) {\r\n                                That.Results.push(Cursor.value);\r\n                            }\r\n                            else {\r\n                                --Skip;\r\n                            }\r\n                        };\r\n                        if (Cursor) {\r\n                            if (!That.CheckFlag && That.filterOnOccurence(Cursor.value)) {\r\n                                skipOrPush();\r\n                            }\r\n                            else if (That.filterOnOccurence(Cursor.value) &&\r\n                                That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                skipOrPush();\r\n                            }\r\n                            Cursor.continue();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                private executeLimit = function () {\r\n                    var That = this;\r\n                    this.CursorOpenRequest.onsuccess = function (e) {\r\n                        var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                        if (That.Results.length != That.LimitRecord && Cursor) {\r\n                            if (!That.CheckFlag && That.filterOnOccurence(Cursor.value)) {\r\n                                That.Results.push(Cursor.value);\r\n                            }\r\n                            else if (That.filterOnOccurence(Cursor.value) &&\r\n                                That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                    That.Results.push(Cursor.value);\r\n                            }\r\n                            Cursor.continue();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                private executeSimple = function () {\r\n                    var That = this;\r\n                    this.CursorOpenRequest.onsuccess = function (e) {\r\n                        var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                        if (Cursor) {\r\n                            if (!That.CheckFlag && That.filterOnOccurence(Cursor.value)) {\r\n                                That.Results.push(Cursor.value);\r\n                            }\r\n                            else if (That.filterOnOccurence(Cursor.value) &&\r\n                                That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                    That.Results.push(Cursor.value);\r\n                            }\r\n                            Cursor.continue();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                protected executeLikeLogic = function (column, value, symbol: Occurence) {\r\n                    var That = this;\r\n                    this.CompValue = (<string>value).toLowerCase();\r\n                    this.CompSymbol = symbol;\r\n                    this.Column = column;\r\n                    this.CursorOpenRequest = this.ObjectStore.index(column).openCursor();\r\n                    this.CursorOpenRequest.onerror = function (e) {\r\n                        That.ErrorOccured = true;\r\n                        That.onErrorOccured(e);\r\n                    }\r\n                    if (this.SkipRecord && this.LimitRecord) {\r\n                        this.executeSkipAndLimit();\r\n                    }\r\n                    else if (this.SkipRecord) {\r\n                        this.executeSkip();\r\n                    }\r\n                    else if (this.LimitRecord) {\r\n                        this.executeLimit();\r\n                    }\r\n                    else {\r\n                        this.executeSimple();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","module JsStore {\r\n    export module Business {\r\n        export module Select {\r\n            export class Where extends Like {\r\n\r\n                private executeRequest = function (column, value, op) {\r\n                    var That = this,\r\n                        CursorOpenRequest,\r\n                        executeSkipAndLimit = function () {\r\n                            var RecordSkipped = false;\r\n                            CursorOpenRequest.onsuccess = function (e) {\r\n                                var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                                if (Cursor) {\r\n                                    if (RecordSkipped && That.Results.length != That.LimitRecord) {\r\n                                        if (!That.CheckFlag) {\r\n                                            That.Results.push(Cursor.value);\r\n                                        }\r\n                                        else if (That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                            That.Results.push(Cursor.value);\r\n                                        }\r\n                                        Cursor.continue();\r\n                                    }\r\n                                    else {\r\n                                        RecordSkipped = true;\r\n                                        Cursor.advance(That.SkipRecord);\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        executeSkip = function () {\r\n                            var RecordSkipped = false;\r\n                            CursorOpenRequest.onsuccess = function (e) {\r\n                                var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                                if (Cursor) {\r\n                                    if (RecordSkipped) {\r\n                                        if (!That.CheckFlag) {\r\n                                            That.Results.push(Cursor.value);\r\n                                        }\r\n                                        else if (That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                            That.Results.push(Cursor.value);\r\n                                        }\r\n                                        Cursor.continue();\r\n                                    }\r\n                                    else {\r\n                                        RecordSkipped = true;\r\n                                        Cursor.advance(That.SkipRecord);\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        executeLimit = function () {\r\n                            CursorOpenRequest.onsuccess = function (e) {\r\n                                var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                                if (Cursor && That.Results.length != That.LimitRecord) {\r\n                                    if (!That.CheckFlag) {\r\n                                        That.Results.push(Cursor.value);\r\n                                    }\r\n                                    else if (That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                        That.Results.push(Cursor.value);\r\n                                    }\r\n                                    Cursor.continue();\r\n                                }\r\n                            }\r\n                        },\r\n                        executeSimple = function () {\r\n                            CursorOpenRequest.onsuccess = function (e) {\r\n                                var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                                if (Cursor) {\r\n                                    if (!That.CheckFlag) {\r\n                                        That.Results.push(Cursor.value);\r\n                                    }\r\n                                    else if (That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                        That.Results.push(Cursor.value);\r\n                                    }\r\n                                    Cursor.continue();\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                    value = op ? value[op] : value;\r\n                    CursorOpenRequest = this.ObjectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n\r\n                    if (this.SkipRecord && this.LimitRecord) {\r\n                        executeSkipAndLimit();\r\n                    }\r\n                    else if (this.SkipRecord) {\r\n                        executeSkip();\r\n                    }\r\n                    else if (this.LimitRecord) {\r\n                        executeLimit();\r\n                    }\r\n                    else {\r\n                        executeSimple();\r\n                    }\r\n\r\n                    CursorOpenRequest.onerror = function (e) {\r\n                        That.ErrorOccured = true;\r\n                        That.onErrorOccured(e);\r\n                    }\r\n                }\r\n\r\n                protected executeWhereLogic = function () {\r\n                    for (var Column in this.Query.Where) {\r\n                        if (!this.ErrorOccured) {\r\n                            if (this.ObjectStore.indexNames.contains(Column)) {\r\n                                var Value = this.Query.Where[Column];\r\n                                if (typeof Value == 'object') {\r\n                                    this.CheckFlag = Boolean(Object.keys(Value).length || Object.keys(this.Query.Where).length);\r\n                                    if (Value.Like) {\r\n                                        var FilterValue = Value.Like.split('%');\r\n                                        if (FilterValue[1]) {\r\n                                            if (FilterValue.length > 2) {\r\n                                                this.executeLikeLogic(Column, FilterValue[1], Occurence.Any);\r\n                                            }\r\n                                            else {\r\n                                                this.executeLikeLogic(Column, FilterValue[1], Occurence.Last);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            this.executeLikeLogic(Column, FilterValue[0], Occurence.First);\r\n                                        }\r\n                                    }\r\n                                    else if (Value['In']) {\r\n                                        for (var i = 0; i < Value['In'].length; i++) {\r\n                                            this.executeRequest(Column, Value['In'][i])\r\n                                        }\r\n                                    }\r\n                                    else if (Value['-']) {\r\n                                        this.executeRequest(Column, Value, '-');\r\n                                    }\r\n                                    else if (Value['>']) {\r\n                                        this.executeRequest(Column, Value, '>');\r\n                                    }\r\n                                    else if (Value['<']) {\r\n                                        this.executeRequest(Column, Value, '<');\r\n                                    }\r\n                                    else if (Value['>=']) {\r\n                                        this.executeRequest(Column, Value, '>=');\r\n                                    }\r\n                                    else if (Value['<=']) {\r\n                                        this.executeRequest(Column, Value, '<=');\r\n                                    }\r\n                                    else {\r\n                                        this.executeRequest(Column, Value);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    this.CheckFlag = Boolean(Object.keys(this.Query.Where).length);\r\n                                    this.executeRequest(Column, Value);\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.ErrorOccured = true;\r\n                                this.Error = Utils.getError(ErrorType.ColumnNotExist, { ColumnName: Column });\r\n                                throwError(this.Error);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export module Select {\r\n            export class Join extends BaseSelect {\r\n                Query: ISelectJoin;\r\n                QueryStack: Array<ITableJoin> = [];\r\n                CurrentQueryStackIndex = 0;\r\n\r\n                private onTransactionCompleted = function (e) {\r\n                    if (this.OnSuccess != null && (this.QueryStack.length == this.CurrentQueryStackIndex + 1)) {\r\n                        if (this.Query['Count']) {\r\n                            this.OnSuccess(this.Results.length);\r\n                        }\r\n                        else {\r\n                            if (this.Query['Skip'] && this.Query['Limit']) {\r\n                                this.Results.splice(0, this.Query['Skip']);\r\n                                this.Results.splice(this.Query['Limit'] - 1, this.Results.length);\r\n                            }\r\n                            else if (this.Query['Skip']) {\r\n                                this.Results.splice(0, this.Query['Skip']);\r\n                            }\r\n                            else if (this.Query['Limit']) {\r\n                                this.Results.splice(this.Query['Limit'] - 1, this.Results.length);\r\n                            }\r\n                            this.OnSuccess(this.Results);\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n                private executeWhereJoinLogic = function (joinQuery: ITableJoin, query: ITableJoin) {\r\n                    var That = this,\r\n                        Results = [],\r\n                        JoinIndex = 0,\r\n                        Column = query.Column,\r\n                        TmpResults = That.Results,\r\n                        Item,\r\n                        ResultLength = TmpResults.length;\r\n\r\n                    //get the data from query table\r\n                    new Select.Instance(<ISelect>{\r\n                        From: query.Table,\r\n                        Where: query.Where,\r\n                        Order: query.Order\r\n                    }, function (results) {\r\n                        //perform join\r\n                        results.forEach(function (value, index) {\r\n                            //search item through each global result\r\n                            for (var i = 0; i < ResultLength; i++) {\r\n                                Item = TmpResults[i][joinQuery.Table][joinQuery.Column];\r\n                                //if (Item == value[query.Column]) {\r\n                                doJoin(Item, value, i);\r\n                                //}\r\n                            }\r\n                        });\r\n                        That.Results = Results;\r\n                        //check if further execution needed\r\n                        if (That.QueryStack.length > That.CurrentQueryStackIndex + 1) {\r\n                            That.startExecutionJoinLogic();\r\n                        }\r\n                        else {\r\n                            That.onTransactionCompleted(null);\r\n                        }\r\n\r\n                    }, function (error) {\r\n                        That.onErrorOccured(error);\r\n                    });\r\n\r\n                    var doJoin = function (value1, value2, itemIndex) {\r\n                        Results[JoinIndex] = {};\r\n                        if (value1 == value2[query.Column]) {\r\n                            Results[JoinIndex][query.Table] = value2;\r\n                            //copy other relative data into current result\r\n                            for (var j = 0; j < That.CurrentQueryStackIndex; j++) {\r\n                                Results[JoinIndex][That.QueryStack[j].Table] = TmpResults[itemIndex][That.QueryStack[j].Table];\r\n                            }\r\n                            ++JoinIndex;\r\n                        }\r\n                        else if (query.JoinType == 'left') {\r\n                            //left join\r\n                            Results[JoinIndex] = {};\r\n                            Results[JoinIndex][query.Table] = null;\r\n                            //copy other relative data into current result\r\n                            for (var j = 0; j < That.CurrentQueryStackIndex; j++) {\r\n                                Results[JoinIndex][That.QueryStack[j].Table] = TmpResults[itemIndex][That.QueryStack[j].Table];\r\n                            }\r\n                            //Results[JoinIndex][joinQuery.Table] = TmpResults[ItemIndex][joinQuery.Table];\r\n                            ++JoinIndex;\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                private executeRightJoin = function (joinQuery: ITableJoin, query: ITableJoin) {\r\n                    var That = this,\r\n                        Results = [],\r\n                        JoinIndex = 0,\r\n                        Column = query.Column,\r\n                        TmpResults = That.Results,\r\n                        Item,\r\n                        ResultLength = TmpResults.length,\r\n                        ItemIndex = 0,\r\n                        Where = {},\r\n                        onExecutionFinished = function () {\r\n                            That.Results = Results;\r\n                            //check if further execution needed\r\n                            if (That.QueryStack.length > That.CurrentQueryStackIndex + 1) {\r\n                                That.startExecutionJoinLogic();\r\n                            }\r\n                            else {\r\n                                That.onTransactionCompleted(null);\r\n                            }\r\n                        },\r\n                        doRightJoin = function (results) {\r\n                            var ValueFound = false;\r\n                            results.forEach(function (item, index) {\r\n                                for (ItemIndex = 0; ItemIndex < ResultLength; ItemIndex++) {\r\n                                    if (item[query.Column] == TmpResults[ItemIndex][joinQuery.Table][joinQuery.Column]) {\r\n                                        ValueFound = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                Results[index] = {};\r\n                                Results[index][query.Table] = item;\r\n                                if (ValueFound) {\r\n                                    ValueFound = false;\r\n                                    for (var j = 0; j < That.CurrentQueryStackIndex; j++) {\r\n                                        Results[index][That.QueryStack[j].Table] = TmpResults[ItemIndex][That.QueryStack[j].Table];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    for (var j = 0; j < That.CurrentQueryStackIndex; j++) {\r\n                                        Results[index][That.QueryStack[j].Table] = null;\r\n                                    }\r\n                                }\r\n                            });\r\n                        },\r\n                        executeLogic = function () {\r\n                            new Select.Instance(<ISelect>{\r\n                                From: query.Table,\r\n                                Where: query.Where,\r\n                                Order: query.Order\r\n                            }, function (results) {\r\n                                doRightJoin(results);\r\n                                onExecutionFinished();\r\n                            }, function (error) {\r\n                                That.ErrorOccured = true;\r\n                                That.onErrorOccured(error);\r\n                            });\r\n                        };\r\n                    executeLogic();\r\n                }\r\n                private executeWhereUndefinedLogicForJoin = function (joinQuery: ITableJoin, query: ITableJoin) {\r\n                    var That = this,\r\n                        Results = [],\r\n                        JoinIndex = 0,\r\n                        Column = query.Column,\r\n                        TmpResults = That.Results,\r\n                        Item,\r\n                        ResultLength = TmpResults.length,\r\n                        ItemIndex = 0,\r\n                        Where = {},\r\n                        onExecutionFinished = function () {\r\n                            That.Results = Results;\r\n                            //check if further execution needed\r\n                            if (That.QueryStack.length > That.CurrentQueryStackIndex + 1) {\r\n                                That.startExecutionJoinLogic();\r\n                            }\r\n                            else {\r\n                                That.onTransactionCompleted(null);\r\n                            }\r\n                        },\r\n                        doJoin = function (results) {\r\n                            if (results.length > 0) {\r\n                                results.forEach(function (value) {\r\n                                    Results[JoinIndex] = {};\r\n                                    Results[JoinIndex][query.Table] = value;\r\n                                    //copy other relative data into current result\r\n                                    for (var j = 0; j < That.CurrentQueryStackIndex; j++) {\r\n                                        Results[JoinIndex][That.QueryStack[j].Table] = TmpResults[ItemIndex][That.QueryStack[j].Table];\r\n                                    }\r\n                                    ++JoinIndex;\r\n                                });\r\n                            }\r\n                            else if (query.JoinType == 'left') {\r\n                                //left join\r\n                                Results[JoinIndex] = {};\r\n                                Results[JoinIndex][query.Table] = null;\r\n                                //copy other relative data into current result\r\n                                for (var j = 0; j < That.CurrentQueryStackIndex; j++) {\r\n                                    Results[JoinIndex][That.QueryStack[j].Table] = TmpResults[ItemIndex][That.QueryStack[j].Table];\r\n                                }\r\n                                //Results[JoinIndex][joinQuery.Table] = TmpResults[ItemIndex][joinQuery.Table];\r\n                                ++JoinIndex;\r\n                            }\r\n                        },\r\n                        executeLogic = function () {\r\n                            if (ItemIndex < ResultLength) {\r\n                                if (!That.ErrorOccured) {\r\n                                    Where[query.Column] = TmpResults[ItemIndex][joinQuery.Table][joinQuery.Column];\r\n                                    new Select.Instance(<ISelect>{\r\n                                        From: query.Table,\r\n                                        Where: Where,\r\n                                        Order: query.Order\r\n                                    }, function (results) {\r\n                                        doJoin(results);\r\n                                        ++ItemIndex;\r\n                                        executeLogic();\r\n                                    }, function (error) {\r\n                                        That.ErrorOccured = true;\r\n                                        That.onErrorOccured(error);\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                onExecutionFinished();\r\n                            }\r\n                        };\r\n                    executeLogic();\r\n                }\r\n\r\n                private startExecutionJoinLogic() {\r\n                    var JoinQuery;\r\n                    if (this.CurrentQueryStackIndex >= 1 && this.CurrentQueryStackIndex % 2 == 1) {\r\n                        JoinQuery = <ITableJoin>{\r\n                            Table: this.QueryStack[this.CurrentQueryStackIndex].NextJoin.Table,\r\n                            Column: this.QueryStack[this.CurrentQueryStackIndex].NextJoin.Column\r\n                        }\r\n                        this.CurrentQueryStackIndex++;\r\n                    }\r\n                    else {\r\n                        JoinQuery = this.QueryStack[this.CurrentQueryStackIndex++];\r\n                    }\r\n\r\n                    var Query = this.QueryStack[this.CurrentQueryStackIndex];\r\n                    if (Query.JoinType == 'right') {\r\n                        this.executeRightJoin(JoinQuery, Query);\r\n                    }\r\n                    else if (Query.Where) {\r\n                        this.executeWhereJoinLogic(JoinQuery, Query);\r\n                    }\r\n                    else {\r\n                        this.executeWhereUndefinedLogicForJoin(JoinQuery, Query);\r\n                    }\r\n\r\n                }\r\n\r\n                constructor(query: ISelectJoin, onSuccess: Function, onError: Function) {\r\n                    super();\r\n                    this.OnSuccess = onSuccess;\r\n                    this.OnError = onError;\r\n                    this.Query = query;\r\n                    var That = this,\r\n                        TableList = []; // used to open the multiple object store\r\n\r\n                    var convertQueryIntoStack = function (query) {\r\n                        if (query.hasOwnProperty('Table1')) {\r\n                            query.Table2['JoinType'] = (<IJoin>query).Join == undefined ? 'inner' : (<IJoin>query).Join.toLowerCase();\r\n                            That.QueryStack.push(query.Table2);\r\n                            if (That.QueryStack.length % 2 == 0) {\r\n                                That.QueryStack[That.QueryStack.length - 1].NextJoin = query.NextJoin;\r\n                            }\r\n                            TableList.push(query.Table2.Table);\r\n                            return convertQueryIntoStack(query.Table1);\r\n                        }\r\n                        else {\r\n                            That.QueryStack.push(query);\r\n                            TableList.push(query.Table);\r\n                            return;\r\n                        }\r\n                    };\r\n                    convertQueryIntoStack(query.From);\r\n                    this.QueryStack.reverse();\r\n                    //get the data for first table\r\n                    if (!this.ErrorOccured) {\r\n                        new Select.Instance(<ISelect>{\r\n                            From: this.QueryStack[0].Table,\r\n                            Where: this.QueryStack[0].Where\r\n                        }, function (results) {\r\n                            var TableName = That.QueryStack[0].Table;\r\n                            results.forEach(function (item, index) {\r\n                                That.Results[index] = {};\r\n                                That.Results[index][TableName] = item;\r\n                            });\r\n                            That.startExecutionJoinLogic();\r\n                        }, function (error) {\r\n                            That.onErrorOccured(error);\r\n                        });\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n}","module JsStore {\r\n    export module Business {\r\n        export module Select {\r\n            export class Instance extends Where {\r\n\r\n                public onTransactionCompleted = function () {\r\n                    var Order = this.Query.Order;\r\n                    if (Order && this.Results.length > 0 && !this.Sorted && Order.By) {\r\n                        Order.Type = Order.Type ? Order.Type.toLowerCase() : 'asc';\r\n                        var That = this, OrderColumn = Order.By,\r\n                            sortNumberInAsc = function () {\r\n                                That.Results.sort(function (a, b) {\r\n                                    return a[OrderColumn] - b[OrderColumn];\r\n                                });\r\n                            },\r\n                            sortNumberInDesc = function () {\r\n                                That.Results.sort(function (a, b) {\r\n                                    return b[OrderColumn] - a[OrderColumn];\r\n                                });\r\n                            },\r\n                            sortAlphabetInAsc = function () {\r\n                                That.Results.sort(function (a, b) {\r\n                                    return a[OrderColumn].toLowerCase().localeCompare(b[OrderColumn].toLowerCase());\r\n                                });\r\n                            },\r\n                            sortAlphabetInDesc = function () {\r\n                                That.Results.sort(function (a, b) {\r\n                                    return b[OrderColumn].toLowerCase().localeCompare(a[OrderColumn].toLowerCase());\r\n                                });\r\n                            };\r\n                        if (typeof this.Results[0][OrderColumn] == 'string') {\r\n                            if (Order.Type == 'asc') {\r\n                                sortAlphabetInAsc();\r\n                            }\r\n                            else {\r\n                                sortAlphabetInDesc();\r\n                            }\r\n                        }\r\n                        else if (typeof this.Results[0][OrderColumn] == 'number') {\r\n                            if (Order.Type == 'asc') {\r\n                                sortNumberInAsc();\r\n                            }\r\n                            else {\r\n                                sortNumberInDesc();\r\n                            }\r\n                        }\r\n                        if (this.OnSuccess) {\r\n                            this.OnSuccess(this.Results);\r\n                        }\r\n\r\n                    }\r\n                    else if (this.SendResultFlag) {\r\n                        if (this.OnSuccess) {\r\n                            this.OnSuccess(this.Results);\r\n                        }\r\n                    }\r\n                }\r\n                constructor(query: ISelect, onSuccess: Function, onError: Function) {\r\n                    super();\r\n                    var That = this;\r\n                    this.Query = query;\r\n                    this.OnSuccess = onSuccess;\r\n                    this.OnError = onError;\r\n                    this.SkipRecord = this.Query.Skip;\r\n                    this.LimitRecord = this.Query.Limit;\r\n\r\n                    try {\r\n                        this.Transaction = DbConnection.transaction([query.From], \"readonly\");\r\n                        this.Transaction.oncomplete = function (e) {\r\n                            That.onTransactionCompleted();\r\n                        };\r\n                        (<any>this.Transaction).ontimeout = That.onTransactionCompleted;\r\n                        this.ObjectStore = this.Transaction.objectStore(query.From);\r\n                        if (query.Where != undefined) {\r\n                            this.executeWhereLogic();\r\n                        }\r\n                        else {\r\n                            this.executeWhereUndefinedLogic();\r\n                        }\r\n                    }\r\n                    catch (ex) {\r\n                        this.onExceptionOccured(ex, { TableName: query.From });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export module Count {\r\n            export class BaseCount extends Base {\r\n                ResultCount: number = 0;\r\n                SkipRecord;\r\n                LimitRecord;\r\n                SendResultFlag: Boolean = true;\r\n                CheckFlag = false;\r\n            }\r\n        }\r\n    }\r\n}","module JsStore {\r\n    export module Business {\r\n        export module Count {\r\n            export class NotWhere extends BaseCount {\r\n\r\n                protected executeWhereUndefinedLogic = function () {\r\n                    var That = this;\r\n                    if (this.ObjectStore.count) {\r\n                        var CountRequest = this.ObjectStore.count();\r\n                        CountRequest.onsuccess = function () {\r\n                            That.ResultCount = CountRequest.result;\r\n                        }\r\n                        CountRequest.onerror = function (e) {\r\n                            That.ErrorOccured = true;\r\n                            That.onErrorOccured(e);\r\n                        }\r\n                    }\r\n                    else {\r\n                        var CursorOpenRequest = this.ObjectStore.openCursor();\r\n                        CursorOpenRequest.onsuccess = function (e) {\r\n                            var Cursor = (<any>e).target.result;\r\n                            if (Cursor) {\r\n                                ++That.ResultCount;\r\n                                (Cursor as any).continue();\r\n                            }\r\n\r\n                        }\r\n\r\n                        CursorOpenRequest.onerror = function (e) {\r\n                            That.ErrorOccured = true;\r\n                            That.onErrorOccured(e);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export module Count {\r\n            export class Like extends NotWhere {\r\n                CompSymbol: Occurence;\r\n                CompValue;\r\n                Column;\r\n\r\n                private filterOnOccurence = function (value) {\r\n                    var Found = false,\r\n                        Value = value[this.Column].toLowerCase();\r\n                    switch (this.CompSymbol) {\r\n                        case Occurence.Any: if (Value.indexOf(this.CompValue) >= 0) {\r\n                            Found = true;\r\n                        }; break;\r\n                        case Occurence.First: if (Value.indexOf(this.CompValue) == 0) {\r\n                            Found = true;\r\n                        }; break;\r\n                        default: if (Value.lastIndexOf(this.CompValue) == Value.length - 1) {\r\n                            Found = true;\r\n                        };\r\n                    }\r\n                    return Found;\r\n                }\r\n\r\n\r\n\r\n                protected executeLikeLogic = function (column, value, symbol: Occurence) {\r\n                    var That = this;\r\n                    this.CompValue = (<string>value).toLowerCase();\r\n                    this.CompSymbol = symbol;\r\n                    this.Column = column;\r\n                    this.CursorOpenRequest = this.ObjectStore.index(column).openCursor();\r\n                    this.CursorOpenRequest.onerror = function (e) {\r\n                        That.ErrorOccured = true;\r\n                        That.onErrorOccured(e);\r\n                    }\r\n                    this.CursorOpenRequest.onsuccess = function (e) {\r\n                        var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                        if (Cursor) {\r\n                            if (That.filterOnOccurence(Cursor.value) && That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                ++That.ResultCount;\r\n                            }\r\n                            Cursor.continue();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","module JsStore {\r\n    export module Business {\r\n        export module Count {\r\n            export class Where extends Like {\r\n                private executeRequest = function (column, value, op) {\r\n                    var That = this;\r\n                    value = op ? value[op] : value;\r\n                    if (!That.CheckFlag && this.ObjectStore.count) {\r\n                        var CountRequest = this.ObjectStore.index(column).count(this.getKeyRange(value, op));\r\n                        CountRequest.onsuccess = function () {\r\n                            That.ResultCount = CountRequest.result;\r\n                        }\r\n                        CountRequest.onerror = function (e) {\r\n                            That.ErrorOccured = true;\r\n                            That.onErrorOccured(e);\r\n                        }\r\n                    }\r\n                    else {\r\n                        var CursorOpenRequest = this.ObjectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n                        CursorOpenRequest.onsuccess = function (e) {\r\n                            var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                            if (Cursor) {\r\n                                if (That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                    ++That.ResultCount;\r\n                                }\r\n                                Cursor.continue();\r\n                            }\r\n                        }\r\n\r\n                        CursorOpenRequest.onerror = function (e) {\r\n                            That.ErrorOccured = true;\r\n                            That.onErrorOccured(e);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                protected executeWhereLogic = function () {\r\n                    for (var Column in this.Query.Where) {\r\n                        if (!this.ErrorOccured) {\r\n                            if (this.ObjectStore.indexNames.contains(Column)) {\r\n                                var Value = this.Query.Where[Column];\r\n                                if (typeof Value == 'object') {\r\n                                    this.CheckFlag = Boolean(Object.keys(Value).length || Object.keys(this.Query.Where).length);\r\n                                    if (Value.Like) {\r\n                                        var FilterValue = Value.Like.split('%');\r\n                                        if (FilterValue[1]) {\r\n                                            if (FilterValue.length > 2) {\r\n                                                this.executeLikeLogic(Column, FilterValue[1], Occurence.Any);\r\n                                            }\r\n                                            else {\r\n                                                this.executeLikeLogic(Column, FilterValue[1], Occurence.Last);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            this.executeLikeLogic(Column, FilterValue[0], Occurence.First);\r\n                                        }\r\n                                    }\r\n                                    else if (Value['In']) {\r\n                                        for (var i = 0; i < Value['In'].length; i++) {\r\n                                            this.executeRequest(Column, Value['In'][i])\r\n                                        }\r\n                                    }\r\n                                    else if (Value['-']) {\r\n                                        this.executeRequest(Column, Value, '-');\r\n                                    }\r\n                                    else if (Value['>']) {\r\n                                        this.executeRequest(Column, Value, '>');\r\n                                    }\r\n                                    else if (Value['<']) {\r\n                                        this.executeRequest(Column, Value, '<');\r\n                                    }\r\n                                    else if (Value['>=']) {\r\n                                        this.executeRequest(Column, Value, '>=');\r\n                                    }\r\n                                    else if (Value['<=']) {\r\n                                        this.executeRequest(Column, Value, '<=');\r\n                                    }\r\n                                    else {\r\n                                        this.executeRequest(Column, Value);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    this.CheckFlag = Boolean(Object.keys(this.Query.Where).length);\r\n                                    this.executeRequest(Column, Value);\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.ErrorOccured = true;\r\n                                this.Error = Utils.getError(ErrorType.ColumnNotExist, { ColumnName: Column });\r\n                                throwError(this.Error);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export module Count {\r\n            export class Instance extends Where {\r\n\r\n                public onTransactionCompleted = function () {\r\n                    if (this.SendResultFlag && this.OnSuccess != null) {\r\n                        this.OnSuccess(this.ResultCount);\r\n                    }\r\n                }\r\n\r\n                constructor(query: ICount, onSuccess: Function, onError: Function) {\r\n                    super();\r\n                    var That = this;\r\n                    this.Query = query;\r\n                    this.OnSuccess = onSuccess;\r\n                    this.OnError = onError;\r\n                    try {\r\n                        this.Transaction = DbConnection.transaction([query.From], \"readonly\");\r\n                        this.Transaction.oncomplete = function (e) {\r\n                            That.onTransactionCompleted();\r\n                        }\r\n                        this.ObjectStore = this.Transaction.objectStore(query.From);\r\n                        if (query.Where != undefined) {\r\n                            this.executeWhereLogic();\r\n                        }\r\n                        else {\r\n                            this.executeWhereUndefinedLogic();\r\n                        }\r\n                    }\r\n                    catch (ex) {\r\n                        this.onExceptionOccured(ex,{ TableName: query.From })\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export module Update {\r\n\r\n            export var updateValue = function (suppliedValue, storedValue) {\r\n                for (var key in suppliedValue) {\r\n                    if (typeof suppliedValue[key] != 'object') {\r\n                        storedValue[key] = suppliedValue[key];\r\n                    }\r\n                    else {\r\n                        for (var op in suppliedValue[key]) {\r\n                            switch (op as any) {\r\n                                case '+': storedValue[key] += suppliedValue[key][op]; break;\r\n                                case '-': storedValue[key] -= suppliedValue[key][op]; break;\r\n                                case '*': storedValue[key] *= suppliedValue[key][op]; break;\r\n                                case '/': storedValue[key] /= suppliedValue[key][op]; break;\r\n                                default: storedValue[key] = suppliedValue[key];\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return storedValue;\r\n            }\r\n        }\r\n\r\n        export class BaseUpdate extends Base {\r\n            SendResultFlag: Boolean = true;\r\n            CheckFlag = false;\r\n        }\r\n    }\r\n}","module JsStore {\r\n    export module Business {\r\n        export module Update {\r\n            export class NotWhere extends BaseUpdate {\r\n\r\n                protected executeWhereUndefinedLogic = function () {\r\n                    var That = this,\r\n                        CursorOpenRequest = this.ObjectStore.openCursor();\r\n                    CursorOpenRequest.onsuccess = function (e) {\r\n                        var Cursor = (<any>e).target.result;\r\n                        if (Cursor) {\r\n                            Cursor.update(updateValue(That.Query.Set, Cursor.value));\r\n                            ++That.RowAffected;\r\n                            (Cursor as any).continue();\r\n                        }\r\n\r\n                    }\r\n                    CursorOpenRequest.onerror = function (e) {\r\n                        That.ErrorOccured = true;\r\n                        That.onErrorOccured(e);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export module Update {\r\n            export class Like extends NotWhere {\r\n                CompSymbol: Occurence;\r\n                CompValue;\r\n                Column;\r\n\r\n                private filterOnOccurence = function (value) {\r\n                    var Found = false,\r\n                        Value = value[this.Column].toLowerCase();\r\n                    switch (this.CompSymbol) {\r\n                        case Occurence.Any: if (Value.indexOf(this.CompValue) >= 0) {\r\n                            Found = true;\r\n                        }; break;\r\n                        case Occurence.First: if (Value.indexOf(this.CompValue) == 0) {\r\n                            Found = true;\r\n                        }; break;\r\n                        default: if (Value.lastIndexOf(this.CompValue) == Value.length - 1) {\r\n                            Found = true;\r\n                        };\r\n                    }\r\n                    return Found;\r\n                }\r\n\r\n                protected executeLikeLogic = function (column, value, symbol: Occurence) {\r\n                    var That = this;\r\n                    this.CompValue = (<string>value).toLowerCase();\r\n                    this.CompSymbol = symbol;\r\n                    this.Column = column;\r\n                    this.CursorOpenRequest = this.ObjectStore.index(column).openCursor();\r\n                    this.CursorOpenRequest.onerror = function (e) {\r\n                        That.ErrorOccured = true;\r\n                        That.onErrorOccured(e);\r\n                    }\r\n                    this.CursorOpenRequest.onsuccess = function (e) {\r\n                        var Cursor: IDBCursorWithValue = (<any>e).target.result,\r\n                            updateValueInternal = function () {\r\n                                Cursor.update(updateValue(That.Query.Set, Cursor.value));\r\n                                ++That.RowAffected;\r\n                            };\r\n                        if (Cursor) {\r\n                            if (!That.CheckFlag && That.filterOnOccurence(Cursor.value)) {\r\n                                updateValueInternal();\r\n                            }\r\n                            else if (That.filterOnOccurence(Cursor.value) &&\r\n                                That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                updateValueInternal();\r\n                            }\r\n                            Cursor.continue();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","module JsStore {\r\n    export module Business {\r\n        export module Update {\r\n            export class Where extends Like {\r\n                private executeRequest = function (column, value, op) {\r\n                    var That = this,\r\n                        CursorOpenRequest;\r\n                    value = op ? value[op] : value;\r\n                    CursorOpenRequest = this.ObjectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n\r\n                    CursorOpenRequest.onsuccess = function (e) {\r\n                        var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                        if (Cursor) {\r\n                            var updateValueInternal = function () {\r\n                                Cursor.update(updateValue(That.Query.Set, Cursor.value));\r\n                                ++That.RowAffected;\r\n                            }\r\n                            if (!That.CheckFlag) {\r\n                                updateValueInternal();\r\n                            }\r\n                            else if (That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                updateValueInternal();\r\n                            }\r\n                            Cursor.continue();\r\n                        }\r\n                    }\r\n\r\n                    CursorOpenRequest.onerror = function (e) {\r\n                        That.ErrorOccured = true;\r\n                        That.onErrorOccured(e);\r\n                    }\r\n                }\r\n\r\n                protected executeWhereLogic = function () {\r\n                    for (var Column in this.Query.Where) {\r\n                        if (!this.ErrorOccured) {\r\n                            if (this.ObjectStore.indexNames.contains(Column)) {\r\n                                var Value = this.Query.Where[Column];\r\n                                if (typeof Value == 'object') {\r\n                                    this.CheckFlag = Boolean(Object.keys(Value).length || Object.keys(this.Query.Where).length);\r\n                                    if (Value.Like) {\r\n                                        var FilterValue = Value.Like.split('%');\r\n                                        if (FilterValue[1]) {\r\n                                            if (FilterValue.length > 2) {\r\n                                                this.executeLikeLogic(Column, FilterValue[1], Occurence.Any);\r\n                                            }\r\n                                            else {\r\n                                                this.executeLikeLogic(Column, FilterValue[1], Occurence.Last);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            this.executeLikeLogic(Column, FilterValue[0], Occurence.First);\r\n                                        }\r\n                                    }\r\n                                    else if (Value['In']) {\r\n                                        for (var i = 0; i < Value['In'].length; i++) {\r\n                                            this.executeRequest(Column, Value['In'][i])\r\n                                        }\r\n                                    }\r\n                                    else if (Value['-']) {\r\n                                        this.executeRequest(Column, Value, '-');\r\n                                    }\r\n                                    else if (Value['>']) {\r\n                                        this.executeRequest(Column, Value, '>');\r\n                                    }\r\n                                    else if (Value['<']) {\r\n                                        this.executeRequest(Column, Value, '<');\r\n                                    }\r\n                                    else if (Value['>=']) {\r\n                                        this.executeRequest(Column, Value, '>=');\r\n                                    }\r\n                                    else if (Value['<=']) {\r\n                                        this.executeRequest(Column, Value, '<=');\r\n                                    }\r\n                                    else {\r\n                                        this.executeRequest(Column, Value);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    this.CheckFlag = Boolean(Object.keys(this.Query.Where).length);\r\n                                    this.executeRequest(Column, Value);\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.ErrorOccured = true;\r\n                                this.Error = Utils.getError(ErrorType.ColumnNotExist, { ColumnName: Column });\r\n                                throwError(this.Error);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export module Update {\r\n            export class Instance extends Where {\r\n\r\n                public onTransactionCompleted = function () {\r\n                    if (this.OnSuccess != null) {\r\n                        this.OnSuccess(this.RowAffected);\r\n                    }\r\n                }\r\n\r\n                constructor(query: IUpdate, onSuccess: Function, onError: Function) {\r\n                    super();\r\n                    try {\r\n                        var That = this;\r\n                        this.OnError = onError;\r\n                        this.checkSchema(query.Set, query.In);\r\n                        if (!this.ErrorOccured) {\r\n                            this.Query = query;\r\n                            this.OnSuccess = onSuccess;\r\n                            this.Transaction = DbConnection.transaction([query.In], \"readwrite\");\r\n                            this.ObjectStore = this.Transaction.objectStore(query.In);\r\n                            var That = this;\r\n                            this.Transaction.oncomplete = function (e) {\r\n                                That.onTransactionCompleted();\r\n                            };\r\n                            (<any>this.Transaction).ontimeout = That.onTransactionTimeout;\r\n\r\n                            if (query.Where == undefined) {\r\n                                this.executeWhereUndefinedLogic();\r\n                            }\r\n                            else {\r\n                                this.executeWhereLogic();\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.onErrorOccured(this.Error, true);\r\n                        }\r\n                    }\r\n                    catch (ex) {\r\n                        this.onExceptionOccured(ex, { TableName: query.In });\r\n                    }\r\n                }\r\n\r\n                private checkSchema(suppliedValue, tableName: string) {\r\n                    var CurrentTable: Table = this.getTable(tableName),\r\n                        That = this;\r\n                    if (CurrentTable) {\r\n                        var onValidationError = function (error: ErrorType, details: any) {\r\n                            That.ErrorOccured = true;\r\n                            That.Error = Utils.getError(error, details);\r\n                        }\r\n                        //loop through table column and find data is valid\r\n                        CurrentTable.Columns.every(function (column: Column) {\r\n                            if (!That.ErrorOccured) {\r\n                                if (column.Name in suppliedValue) {\r\n                                    var executeCheck = function (value) {\r\n                                        //check not null schema\r\n                                        if (column.NotNull && isNull(value)) {\r\n                                            onValidationError(ErrorType.NullValue, { ColumnName: column.Name });\r\n                                        }\r\n\r\n                                        //check datatype\r\n                                        if (column.DataType) {\r\n                                            var Type = typeof value;\r\n                                            if (Type != column.DataType) {\r\n                                                if (Type != 'object') {\r\n                                                    onValidationError(ErrorType.BadDataType, { ColumnName: column.Name });\r\n                                                }\r\n                                                else {\r\n                                                    var AllowedProp = ['+', '-', '*', '/'];\r\n                                                    for (var prop in value) {\r\n                                                        if (AllowedProp.indexOf(prop) < 0) {\r\n                                                            onValidationError(ErrorType.BadDataType, { ColumnName: column.Name });\r\n                                                        }\r\n                                                        break;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    executeCheck(suppliedValue[column.Name]);\r\n                                }\r\n                                return true;\r\n                            }\r\n                            else {\r\n                                return false;\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        var Error = Utils.getError(ErrorType.TableNotExist, { TableName: tableName });\r\n                        throwError(Error);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export module Delete {\r\n            export class BaseDelete extends Base {\r\n                SendResultFlag: Boolean = true;\r\n                CheckFlag = false;\r\n            }\r\n        }\r\n    }\r\n}","module JsStore {\r\n    export module Business {\r\n        export module Delete {\r\n            export class NotWhere extends BaseDelete {\r\n\r\n                protected executeWhereUndefinedLogic = function () {\r\n                    var That = this,\r\n                        CursorOpenRequest = this.ObjectStore.openCursor();\r\n                    CursorOpenRequest.onsuccess = function (e) {\r\n                        var Cursor = (<any>e).target.result;\r\n                        if (Cursor) {\r\n                            Cursor.delete();\r\n                            ++That.RowAffected;\r\n                            (Cursor as any).continue();\r\n                        }\r\n\r\n                    }\r\n                    CursorOpenRequest.onerror = function (e) {\r\n                        That.ErrorOccured = true;\r\n                        That.onErrorOccured(e);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export module Delete {\r\n            export class Like extends NotWhere {\r\n                CompSymbol: Occurence;\r\n                CompValue;\r\n                Column;\r\n\r\n                private filterOnOccurence = function (value) {\r\n                    var Found = false,\r\n                        Value = value[this.Column].toLowerCase();\r\n                    switch (this.CompSymbol) {\r\n                        case Occurence.Any: if (Value.indexOf(this.CompValue) >= 0) {\r\n                            Found = true;\r\n                        }; break;\r\n                        case Occurence.First: if (Value.indexOf(this.CompValue) == 0) {\r\n                            Found = true;\r\n                        }; break;\r\n                        default: if (Value.lastIndexOf(this.CompValue) == Value.length - 1) {\r\n                            Found = true;\r\n                        };\r\n                    }\r\n                    return Found;\r\n                }\r\n\r\n\r\n\r\n                protected executeLikeLogic = function (column, value, symbol: Occurence) {\r\n                    var That = this;\r\n                    this.CompValue = (<string>value).toLowerCase();\r\n                    this.CompSymbol = symbol;\r\n                    this.Column = column;\r\n                    this.CursorOpenRequest = this.ObjectStore.index(column).openCursor();\r\n                    this.CursorOpenRequest.onerror = function (e) {\r\n                        That.ErrorOccured = true;\r\n                        That.onErrorOccured(e);\r\n                    }\r\n                    this.CursorOpenRequest.onsuccess = function (e) {\r\n                        var Cursor: IDBCursorWithValue = (<any>e).target.result,\r\n                            deleteValue = function () {\r\n                                Cursor.delete();\r\n                                ++That.RowAffected;\r\n                            };\r\n                        if (Cursor) {\r\n                            if (!That.CheckFlag && That.filterOnOccurence(Cursor.value)) {\r\n                                deleteValue();\r\n                            }\r\n                            else if (That.filterOnOccurence(Cursor.value) && That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                deleteValue();\r\n                            }\r\n                            Cursor.continue();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","module JsStore {\r\n    export module Business {\r\n        export module Delete {\r\n            export class Where extends Like {\r\n                private executeRequest = function (column, value, op) {\r\n                    var That = this,\r\n                        CursorOpenRequest;\r\n                    value = op ? value[op] : value;\r\n                    CursorOpenRequest = this.ObjectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n\r\n                    CursorOpenRequest.onsuccess = function (e) {\r\n                        var Cursor: IDBCursorWithValue = (<any>e).target.result,\r\n                            deleteValue = function () {\r\n                                Cursor.delete();\r\n                                ++That.RowAffected;\r\n                            };\r\n                        if (Cursor) {\r\n                            if (!That.CheckFlag) {\r\n                                deleteValue();\r\n                            }\r\n                            else if (That.checkForWhereConditionMatch(Cursor.value)) {\r\n                                deleteValue();\r\n                            }\r\n                            Cursor.continue();\r\n                        }\r\n                    }\r\n\r\n                    CursorOpenRequest.onerror = function (e) {\r\n                        That.ErrorOccured = true;\r\n                        That.onErrorOccured(e);\r\n                    }\r\n                }\r\n\r\n                protected executeWhereLogic = function () {\r\n                    for (var Column in this.Query.Where) {\r\n                        if (!this.ErrorOccured) {\r\n                            if (this.ObjectStore.indexNames.contains(Column)) {\r\n                                var Value = this.Query.Where[Column];\r\n                                if (typeof Value == 'object') {\r\n                                    this.CheckFlag = Boolean(Object.keys(Value).length || Object.keys(this.Query.Where).length);\r\n                                    if (Value.Like) {\r\n                                        var FilterValue = Value.Like.split('%');\r\n                                        if (FilterValue[1]) {\r\n                                            if (FilterValue.length > 2) {\r\n                                                this.executeLikeLogic(Column, FilterValue[1], Occurence.Any);\r\n                                            }\r\n                                            else {\r\n                                                this.executeLikeLogic(Column, FilterValue[1], Occurence.Last);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            this.executeLikeLogic(Column, FilterValue[0], Occurence.First);\r\n                                        }\r\n                                    }\r\n                                    else if (Value['In']) {\r\n                                        for (var i = 0; i < Value['In'].length; i++) {\r\n                                            this.executeRequest(Column, Value['In'][i])\r\n                                        }\r\n                                    }\r\n                                    else if (Value['-']) {\r\n                                        this.executeRequest(Column, Value, '-');\r\n                                    }\r\n                                    else if (Value['>']) {\r\n                                        this.executeRequest(Column, Value, '>');\r\n                                    }\r\n                                    else if (Value['<']) {\r\n                                        this.executeRequest(Column, Value, '<');\r\n                                    }\r\n                                    else if (Value['>=']) {\r\n                                        this.executeRequest(Column, Value, '>=');\r\n                                    }\r\n                                    else if (Value['<=']) {\r\n                                        this.executeRequest(Column, Value, '<=');\r\n                                    }\r\n                                    else {\r\n                                        this.executeRequest(Column, Value);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    this.CheckFlag = Boolean(Object.keys(this.Query.Where).length);\r\n                                    this.executeRequest(Column, Value);\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.ErrorOccured = true;\r\n                                this.Error = Utils.getError(ErrorType.ColumnNotExist, { ColumnName: Column });\r\n                                throwError(this.Error);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","module JsStore {\r\n    export module Business {\r\n        export module Delete {\r\n            export class Instance extends Where {\r\n\r\n                private onTransactionCompleted = function () {\r\n                    if (this.OnSuccess != null) {\r\n                        this.OnSuccess(this.RowAffected);\r\n                    }\r\n                }\r\n\r\n                constructor(query: IDelete, onSuccess: Function, onError: Function) {\r\n                    super();\r\n                    try {\r\n                        var That = this;\r\n                        this.Query = query;\r\n                        this.OnSuccess = onSuccess;\r\n                        this.OnError = onError;\r\n                        this.Transaction = DbConnection.transaction([query.From], \"readwrite\");\r\n                        this.ObjectStore = this.Transaction.objectStore(query.From);\r\n                        this.Transaction.oncomplete = function () {\r\n                            That.onTransactionCompleted();\r\n                        }\r\n                        this.Transaction.onerror = function (e) {\r\n                            That.onErrorOccured(e);\r\n                        }\r\n\r\n                        if (query.Where == undefined) {\r\n                            this.executeWhereUndefinedLogic();\r\n                        }\r\n                        else {\r\n                            this.executeWhereLogic();\r\n                        }\r\n\r\n                    }\r\n                    catch (ex) {\r\n                        this.onExceptionOccured(ex, { TableName: query.From });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}","module JsStore {\r\n\r\n    export var WorkerStatus: WebWorkerStatus = WebWorkerStatus.NotStarted,\r\n        WorkerInstance: Worker;\r\n    export class CodeExecutionHelper {\r\n        RequestQueue: Array<IWebWorkerRequest> = [];\r\n        IsCodeExecuting = false;\r\n        protected prcoessExecutionOfCode = function (request: IWebWorkerRequest) {\r\n            this.RequestQueue.push(request);\r\n            if (EnableLog) {\r\n                console.log(\"request pushed:\" + request.Name);\r\n            }\r\n            if (this.RequestQueue.length == 1 && WorkerStatus != WebWorkerStatus.NotStarted) {\r\n                this.executeCode();\r\n            }\r\n        }\r\n\r\n        private executeCode = function () {\r\n            if (!this.IsCodeExecuting && this.RequestQueue.length > 0) {\r\n                this.IsCodeExecuting = true;\r\n                var FirstRequest = this.RequestQueue[0],\r\n                    Request = <IWebWorkerRequest>{\r\n                        Name: FirstRequest.Name,\r\n                        Query: FirstRequest.Query\r\n                    }\r\n                if (EnableLog) {\r\n                    console.log(\"request executing : \" + FirstRequest.Name)\r\n                }\r\n                if (WorkerStatus == WebWorkerStatus.Registered) {\r\n                    this.executeCodeUsingWorker(Request);\r\n                } else {\r\n                    this.executeCodeDirect(Request);\r\n                }\r\n            }\r\n        }\r\n\r\n        private executeCodeDirect = function (request: IWebWorkerRequest) {\r\n            var That = this;\r\n            new Business.Main(function (results) {\r\n                That.processFinishedRequest(results);\r\n            }).checkConnectionAndExecuteLogic(request);\r\n        }\r\n\r\n        private executeCodeUsingWorker = function (request: IWebWorkerRequest) {\r\n            WorkerInstance.postMessage(request);\r\n        }\r\n\r\n        private processFinishedRequest = function (message: IWebWorkerResult) {\r\n            var FinishedRequest: IWebWorkerRequest = this.RequestQueue.shift();\r\n            this.IsCodeExecuting = false;\r\n            if (FinishedRequest) {\r\n                if (EnableLog) {\r\n                    console.log(\"request finished : \" + FinishedRequest.Name);\r\n                }\r\n                if (message.ErrorOccured) {\r\n                    if (FinishedRequest.OnError) {\r\n                        FinishedRequest.OnError(message.ErrorDetails);\r\n                    }\r\n                }\r\n                else {\r\n                    if (FinishedRequest.OnSuccess) {\r\n                        if (message.ReturnedValue != null) {\r\n                            FinishedRequest.OnSuccess(message.ReturnedValue);\r\n                        }\r\n                        else {\r\n                            FinishedRequest.OnSuccess();\r\n                        }\r\n                    }\r\n                }\r\n                this.executeCode();\r\n            }\r\n        }\r\n\r\n        private onWorkerFailed = function () {\r\n            console.warn('JsStore is not runing in web worker');\r\n            WorkerStatus = WebWorkerStatus.Failed;\r\n            this.executeCode();\r\n        }\r\n\r\n        protected createWorker = function () {\r\n            var That = this;\r\n            try {\r\n                if (Worker) {\r\n                    var ScriptUrl = this.getScriptUrl();\r\n                    if (ScriptUrl && ScriptUrl.length > 0) {\r\n                        WorkerInstance = new Worker(ScriptUrl);\r\n                        WorkerInstance.onmessage = function (msg) {\r\n                            That.onMessageFromWorker(msg);\r\n                        }\r\n                        setTimeout(function () {\r\n                            if (WorkerStatus != WebWorkerStatus.Failed) {\r\n                                WorkerStatus = WebWorkerStatus.Registered;\r\n                            }\r\n                            That.executeCode();\r\n                        }, 100);\r\n                    }\r\n                    else {\r\n                        That.onWorkerFailed();\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    That.onWorkerFailed();\r\n                }\r\n            }\r\n            catch (ex) {\r\n                That.onWorkerFailed();\r\n            }\r\n        }\r\n\r\n        private getScriptUrl(fileName: string) {\r\n            var ScriptUrl = \"\";\r\n            var FileName = fileName ? fileName.toLowerCase() : \"jsstore\";\r\n            var Scripts = document.getElementsByTagName('script');\r\n            for (var i = Scripts.length - 1, url = \"\"; i >= 0; i--) {\r\n                url = Scripts[i].src;\r\n                url = url.substring(url.lastIndexOf('/') + 1).toLowerCase();\r\n                if (url.length > 0 && url.indexOf(FileName) >= 0) {\r\n                    ScriptUrl = Scripts[i].src;\r\n                    return ScriptUrl;\r\n                }\r\n            }\r\n            return ScriptUrl;\r\n        }\r\n\r\n        private onMessageFromWorker = function (msg) {\r\n            var That = this;\r\n            if (typeof msg.data == 'string') {\r\n                var Datas = msg.data.split(':')[1];\r\n                switch (Datas) {\r\n                    case 'WorkerFailed': That.onWorkerFailed();\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                this.processFinishedRequest(msg.data);\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","import Model = JsStore.Model;\r\nimport DataBase = Model.DataBase;\r\nimport Column = Model.Column;\r\nimport Table = Model.Table;\r\nmodule JsStore {\r\n\r\n    export class Instance extends CodeExecutionHelper {\r\n        constructor(dbName = null) {\r\n            super();\r\n            if (WorkerStatus == WebWorkerStatus.NotStarted) {\r\n                Utils.setDbType();\r\n                this.createWorker();\r\n            }\r\n            else {\r\n                WorkerInstance.terminate();\r\n                this.createWorker();\r\n            }\r\n            if (dbName != null) {\r\n                this.prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n                    Name: 'open_db',\r\n                    Query: dbName\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * creates DataBase\r\n         * \r\n         * @param {IDataBase} dataBase \r\n         * @param {Function} onSuccess \r\n         * @param {Function} [onError=null] \r\n         * @returns \r\n         * \r\n         * @memberOf Main\r\n         */\r\n        createDb(dataBase: Model.IDataBase, onSuccess: Function = null, onError: Function = null) {\r\n            this.prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n                Name: 'create_db',\r\n                OnSuccess: onSuccess,\r\n                OnError: onError,\r\n                Query: dataBase\r\n            });\r\n            return this;\r\n        }\r\n\r\n\r\n        /**\r\n         * drop dataBase\r\n         * \r\n         * @param {Function} onSuccess \r\n         * @param {Function} [onError=null] \r\n         * @memberof Instance\r\n         */\r\n        dropDb(onSuccess: Function, onError: Function = null) {\r\n            this.prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n                Name: 'drop_db',\r\n                OnSuccess: onSuccess,\r\n                OnError: onError\r\n            });\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * select data from table\r\n         * \r\n         * @param {IQuery} query \r\n         * @param {Function} [onSuccess=null]  \r\n         * @param {Function} [onError=null] \r\n         * \r\n         * @memberOf Main\r\n         */\r\n        select(query: ISelect, onSuccess: Function = null, onError: Function = null) {\r\n            var OnSuccess = query.OnSuccess ? query.OnSuccess : onSuccess,\r\n                OnError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = null;\r\n            query.OnError = null;\r\n            this.prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n                Name: 'select',\r\n                Query: query,\r\n                OnSuccess: OnSuccess,\r\n                OnError: OnError\r\n            });\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * get no of result from table\r\n         * \r\n         * @param {ICount} query \r\n         * @param {Function} [onSuccess=null]  \r\n         * @param {Function} [onError=null] \r\n         * @memberof Instance\r\n         */\r\n        count(query: ICount, onSuccess: Function = null, onError: Function = null) {\r\n            var OnSuccess = query.OnSuccess ? query.OnSuccess : onSuccess,\r\n                OnError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = null;\r\n            query.OnError = null;\r\n            this.prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n                Name: 'count',\r\n                Query: query,\r\n                OnSuccess: OnSuccess,\r\n                OnError: OnError\r\n            });\r\n            return this;\r\n        }\r\n\r\n\r\n        /**\r\n         * insert data into table\r\n         * \r\n         * @param {IInsert} query \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} [onError=null] \r\n         * @memberof Instance\r\n         */\r\n        insert(query: IInsert, onSuccess: Function = null, onError: Function = null) {\r\n            var OnSuccess = query.OnSuccess ? query.OnSuccess : onSuccess,\r\n                OnError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = null;\r\n            query.OnError = null;\r\n            this.prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n                Name: 'insert',\r\n                Query: query,\r\n                OnSuccess: OnSuccess,\r\n                OnError: OnError\r\n            });\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * update data into table\r\n         * \r\n         * @param {IUpdate} query \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} [onError=null] \r\n         * @memberof Instance\r\n         */\r\n        update(query: IUpdate, onSuccess: Function = null, onError: Function = null) {\r\n            var OnSuccess = query.OnSuccess ? query.OnSuccess : onSuccess,\r\n                OnError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = null;\r\n            query.OnError = null;\r\n            this.prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n                Name: 'update',\r\n                Query: query,\r\n                OnSuccess: OnSuccess,\r\n                OnError: OnError\r\n            });\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * delete data from table\r\n         * \r\n         * @param {IDelete} query \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} onError \r\n         * @memberof Instance\r\n         */\r\n        delete(query: IDelete, onSuccess: Function = null, onError: Function = null) {\r\n            var OnSuccess = query.OnSuccess ? query.OnSuccess : onSuccess,\r\n                OnError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = null;\r\n            query.OnError = null;\r\n            this.prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n                Name: 'delete',\r\n                Query: query,\r\n                OnSuccess: OnSuccess,\r\n                OnError: OnError\r\n            });\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * delete all data from table\r\n         * \r\n         * @param {string} tableName \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} [onError=null] \r\n         * @memberof Instance\r\n         */\r\n        clear(tableName: string, onSuccess: Function = null, onError: Function = null) {\r\n            this.prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n                Name: 'clear',\r\n                Query: tableName,\r\n                OnSuccess: onSuccess,\r\n                OnError: onerror\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n}\r\n","(!self.alert)\r\n{\r\n    self.onmessage = function (e) {\r\n        if (JsStore.EnableLog) {\r\n            console.log(\"Request executing from WebWorker, request name:\" + e.data.Name);\r\n        }\r\n        var Request = e.data, IndexDbObject = new JsStore.Business.Main();\r\n        IndexDbObject.checkConnectionAndExecuteLogic(Request);\r\n    };\r\n}\r\n\r\n","module KeyStore {\r\n    export interface IError {\r\n        Name: string,\r\n        Value: string\r\n    }\r\n    export class Utils {\r\n        /**\r\n         * determine and set the DataBase Type\r\n         * \r\n         * \r\n         * @memberOf UtilityLogic\r\n         */\r\n        static setDbType = function () {\r\n            (self as any).indexedDB = self.indexedDB || (self as any).mozIndexedDB || (self as any).webkitIndexedDB || (self as any).msIndexedDB;\r\n            if (indexedDB) {\r\n                (self as any).IDBTransaction = (self as any).IDBTransaction || (self as any).webkitIDBTransaction || (self as any).msIDBTransaction;\r\n                (self as any).IDBKeyRange = (self as any).IDBKeyRange || (self as any).webkitIDBKeyRange || (self as any).msIDBKeyRange\r\n            }\r\n            else if (!self.alert) {\r\n                console.log('worked failed');\r\n                (self as any).postMessage('message:WorkerFailed');\r\n            }\r\n            else {\r\n                JsStore.Status = {\r\n                    ConStatus: JsStore.ConnectionStatus.UnableToStart,\r\n                    LastError: JsStore.ErrorType.IndexedDbUndefined\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","module KeyStore {\r\n\r\n    export interface ISelect {\r\n        From: any,\r\n        Where: any\r\n    }\r\n\r\n    export interface IDelete {\r\n        From: string,\r\n        Where: any\r\n    }\r\n\r\n    export enum ConnectionStatus {\r\n        Connected = \"connected\",\r\n        Closed = \"closed\",\r\n        NotStarted = \"not_connected\"\r\n    }\r\n\r\n    export interface KeyStoreStatus {\r\n        ConStatus: ConnectionStatus,\r\n        LastError: string\r\n    }\r\n\r\n    export interface IInsert {\r\n        TableName: string,\r\n        Set: {\r\n            Key: string,\r\n            Value; any\r\n        }\r\n    }\r\n\r\n    export interface IWebWorkerRequest {\r\n        Name: string,\r\n        Query: any,\r\n        OnSuccess: Function,\r\n        OnError: Function\r\n    }\r\n\r\n    export interface IWebWorkerResult {\r\n        ErrorOccured: boolean;\r\n        ErrorDetails: any;\r\n        ReturnedValue: any;\r\n    }\r\n\r\n    export var RequestQueue: Array<IWebWorkerRequest> = [],\r\n        TableName = \"LocalStore\",\r\n        IsCodeExecuting = false;\r\n\r\n}","module KeyStore {\r\n    export var prcoessExecutionOfCode = function (request: IWebWorkerRequest) {\r\n        RequestQueue.push(request);\r\n        if (RequestQueue.length == 1) {\r\n            executeCode();\r\n        }\r\n    }\r\n\r\n    export var executeCode = function () {\r\n        if (!IsCodeExecuting && RequestQueue.length > 0) {\r\n            IsCodeExecuting = true;\r\n            var Request = <IWebWorkerRequest>{\r\n                Name: RequestQueue[0].Name,\r\n                Query: RequestQueue[0].Query\r\n            }\r\n            executeCodeDirect(Request);\r\n        }\r\n    }\r\n\r\n    export var executeCodeDirect = function (request: IWebWorkerRequest) {\r\n        var That = this;\r\n        new Business.Main(function (results) {\r\n            That.processFinishedRequest(results);\r\n        }).checkConnectionAndExecuteLogic(request);\r\n    }\r\n\r\n    export var processFinishedRequest = function (message: IWebWorkerResult) {\r\n        var FinishedRequest: IWebWorkerRequest = RequestQueue.shift();\r\n        IsCodeExecuting = false;\r\n        if (message.ErrorOccured) {\r\n            if (FinishedRequest.OnError) {\r\n                FinishedRequest.OnError(message.ErrorDetails);\r\n            }\r\n            else {\r\n                console.log(message.ErrorDetails);\r\n            }\r\n        }\r\n        else {\r\n            if (FinishedRequest.OnSuccess) {\r\n                if (message.ReturnedValue != null) {\r\n                    FinishedRequest.OnSuccess(message.ReturnedValue);\r\n                }\r\n                else {\r\n                    FinishedRequest.OnSuccess();\r\n                }\r\n            }\r\n        }\r\n        this.executeCode();\r\n    }\r\n\r\n}","module KeyStore {\r\n    export module Business {\r\n        export class Base {\r\n            Results = null;\r\n            OnSuccess: Function;\r\n            OnError: Function;\r\n            ErrorOccured: boolean = false;\r\n            ErrorCount = 0;\r\n            Transaction: IDBTransaction;\r\n            ObjectStore: IDBObjectStore;\r\n\r\n            protected onErrorOccured = function (e) {\r\n                ++this.ErrorCount;\r\n                if (this.ErrorCount == 1) {\r\n                    if (this.OnError != null) {\r\n                        this.OnError((e as any).target.error);\r\n                    }\r\n                }\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n}","module KeyStore {\r\n    export module Business {\r\n        export class Get extends Base {\r\n            Query: ISelect;\r\n\r\n            private get = function () {\r\n                var That: Get = this,\r\n                    getData = function (column, value) {\r\n                        var CursorOpenRequest = That.ObjectStore.index(column).openCursor(IDBKeyRange.only(value));\r\n                        CursorOpenRequest.onerror = function (e) {\r\n                            That.ErrorOccured = true;\r\n                            That.onErrorOccured(e);\r\n                        }\r\n                        CursorOpenRequest.onsuccess = function (e) {\r\n                            var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                            if (Cursor) {\r\n                                That.Results = Cursor.value['Value'];\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                for (var column in this.Query.Where) {\r\n                    getData(column, this.Query.Where[column]);\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n            constructor(query: ISelect, onSuccess: Function, onError: Function) {\r\n                super();\r\n                var That = this;\r\n                this.Query = query;\r\n                this.OnError = onError;\r\n                this.Transaction = DbConnection.transaction([query.From], \"readonly\");\r\n                this.ObjectStore = this.Transaction.objectStore(query.From);\r\n                this.Transaction.oncomplete = function (e) {\r\n                    if (onSuccess != null) {\r\n                        onSuccess(That.Results);\r\n                    }\r\n                }\r\n                this.get();\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","module KeyStore {\r\n    export module Business {\r\n        export class Set extends Base {\r\n\r\n            private setData = function (value) {\r\n                var That: Set = this,\r\n                    updateIfExistElseInsert = function () {\r\n                        var CursorOpenRequest = That.ObjectStore.index('Key').openCursor(IDBKeyRange.only(value['Key']));\r\n                        CursorOpenRequest.onsuccess = function (e) {\r\n                            var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                            if (Cursor) {\r\n                                Cursor.value['Value'] = value['Value'];\r\n                                Cursor.update(Cursor.value);\r\n                            }\r\n                            else {\r\n                                insertData();\r\n                            }\r\n                        }\r\n\r\n                        CursorOpenRequest.onerror = function (e) {\r\n                            That.ErrorOccured = true;\r\n                            That.onErrorOccured(e);\r\n                        }\r\n\r\n                    },\r\n                    insertData = function () {\r\n                        var AddResult = That.ObjectStore.add(value);\r\n                        AddResult.onerror = function (e) {\r\n                            That.ErrorOccured = true;\r\n                            That.onErrorOccured(e);\r\n                        }\r\n                    }\r\n                updateIfExistElseInsert();\r\n            }\r\n\r\n            constructor(query: IInsert, onSuccess: Function, onError: Function) {\r\n                super();\r\n                try {\r\n                    var That = this;\r\n                    this.OnError = onError;\r\n                    this.Transaction = DbConnection.transaction([query.TableName], \"readwrite\");\r\n                    this.ObjectStore = this.Transaction.objectStore(query.TableName);\r\n                    this.Transaction.oncomplete = function (e) {\r\n                        if (onSuccess != null) {\r\n                            onSuccess();\r\n                        }\r\n                    };\r\n                    this.setData(query.Set);\r\n                }\r\n                catch (ex) {\r\n                    console.error(ex);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","module KeyStore {\r\n    export module Business {\r\n        export class Remove extends Base {\r\n            Query: IDelete;\r\n            RowAffected: number = 0;\r\n            private remove = function () {\r\n                var That = this,\r\n                    removeData = function (column, value) {\r\n\r\n                        var CursorOpenRequest = That.ObjectStore.index(column).openCursor(IDBKeyRange.only(value));\r\n                        CursorOpenRequest.onerror = function (e) {\r\n                            That.ErrorOccured = true;\r\n                            That.onErrorOccured(e);\r\n                        };\r\n                        CursorOpenRequest.onsuccess = function (e) {\r\n                            var Cursor: IDBCursorWithValue = (<any>e).target.result;\r\n                            if (Cursor) {\r\n                                Cursor.delete();\r\n                                ++That.RowAffected;\r\n                                Cursor.continue();\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                for (var Column in this.Query.Where) {\r\n                    if (!That.ErrorOccured) {\r\n                        removeData(Column, That.Query.Where[Column]);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            constructor(query: IDelete, onSuccess: Function, onError: Function) {\r\n                super();\r\n                var That = this;\r\n                this.Query = query;\r\n                this.OnError = onError;\r\n                this.Transaction = DbConnection.transaction([query.From], \"readwrite\");\r\n                this.ObjectStore = this.Transaction.objectStore(query.From);\r\n\r\n                this.Transaction.oncomplete = function () {\r\n                    if (onSuccess != null) {\r\n                        onSuccess(That.RowAffected);\r\n                    }\r\n                }\r\n                this.Transaction.onerror = function (e) {\r\n                    That.onErrorOccured(e);\r\n                }\r\n\r\n                this.remove();\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","module KeyStore {\r\n    export module Business {\r\n        export class InitDb {\r\n            constructor(dbName: string, tableName: string, onSuccess: Function, onError: Function) {\r\n                var That = this,\r\n                    DbRequest = self.indexedDB.open(dbName, 1);\r\n\r\n                DbRequest.onerror = function (event) {\r\n                    if ((event as any).target.error.name == 'InvalidStateError') {\r\n                        JsStore.Status = {\r\n                            ConStatus: JsStore.ConnectionStatus.UnableToStart,\r\n                            LastError: JsStore.ErrorType.IndexedDbBlocked,\r\n                        }\r\n                    }\r\n                    if (onError != null) {\r\n                        onError((event as any).target.error);\r\n                    }\r\n                };\r\n\r\n                DbRequest.onsuccess = function (event) {\r\n                    Status.ConStatus = ConnectionStatus.Connected;\r\n                    DbConnection = DbRequest.result;\r\n                    DbConnection.onclose = function () {\r\n                        Status.ConStatus = ConnectionStatus.Closed;\r\n                        Status.LastError = \"Connection Closed\";\r\n                    }\r\n\r\n                    DbConnection.onversionchange = function (e) {\r\n                        if (e.newVersion === null) { // An attempt is made to delete the db\r\n                            e.target.close(); // Manually close our connection to the db\r\n                        }\r\n                    };\r\n\r\n                    DbConnection.onerror = function (e) {\r\n                        Status.LastError = \"Error occured in connection :\" + e.target.result;\r\n                    }\r\n\r\n                    DbConnection.onabort = function (e) {\r\n                        Status.ConStatus = ConnectionStatus.Closed;\r\n                        Status.LastError = \"Connection aborted\";\r\n                    }\r\n\r\n                    if (onSuccess != null) {\r\n                        onSuccess();\r\n                    }\r\n                };\r\n\r\n                DbRequest.onupgradeneeded = function (event) {\r\n                    var db = (<any>event).target.result,\r\n                        Column = \"Key\";\r\n                    db.createObjectStore(tableName, {\r\n                        keyPath: Column\r\n                    }).createIndex(Column, Column, { unique: true });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","module KeyStore {\r\n    export module Business {\r\n        export var DbConnection,\r\n            Status: KeyStoreStatus = <KeyStoreStatus>{\r\n                ConStatus: ConnectionStatus.NotStarted,\r\n                LastError: \"\"\r\n            };\r\n        export class Main {\r\n            OnSuccess: Function;\r\n            constructor(onSuccess = null) {\r\n                this.OnSuccess = onSuccess;\r\n            }\r\n\r\n            public checkConnectionAndExecuteLogic = function (request: IWebWorkerRequest) {\r\n                if (request.Name == 'create_db' || request.Name == 'open_db') {\r\n                    this.executeLogic(request);\r\n                }\r\n                else {\r\n                    if (Status.ConStatus == ConnectionStatus.Connected) {\r\n                        this.executeLogic(request);\r\n                    }\r\n                    else if (Status.ConStatus == ConnectionStatus.NotStarted) {\r\n                        var That = this;\r\n                        setTimeout(function () {\r\n                            That.checkConnectionAndExecuteLogic(request);\r\n                        }, 100);\r\n                    }\r\n                    else if (Status.ConStatus == ConnectionStatus.Closed) {\r\n                        var That = this;\r\n                        this.createDb(TableName, function () {\r\n                            That.checkConnectionAndExecuteLogic(request);\r\n                        }, 100);\r\n                    }\r\n                }\r\n            }\r\n\r\n            private returnResult = function (result) {\r\n                if (this.OnSuccess) {\r\n                    this.OnSuccess(result);\r\n                }\r\n            }\r\n\r\n            private executeLogic = function (request: IWebWorkerRequest) {\r\n                var That = this,\r\n                    OnSuccess = function (results) {\r\n                        That.returnResult(<IWebWorkerResult>{\r\n                            ReturnedValue: results\r\n                        });\r\n                    },\r\n                    OnError = function (err) {\r\n                        That.returnResult(<IWebWorkerResult>{\r\n                            ErrorOccured: true,\r\n                            ErrorDetails: err\r\n                        });\r\n                    }\r\n\r\n                switch (request.Name) {\r\n                    case 'get':\r\n                        this.get(request.Query, OnSuccess, OnError);\r\n                        break;\r\n                    case 'set': this.set(request.Query, OnSuccess, OnError);\r\n                        break;\r\n                    case 'remove': this.remove(request.Query, OnSuccess, OnError);\r\n                        break;\r\n                    case 'create_db': this.createDb(request.Query, OnSuccess, OnError); break;\r\n                }\r\n            }\r\n\r\n            public set = function (query: IInsert, onSuccess: Function, onError: Function) {\r\n                var ObjInsert = new Set(query, onSuccess, onError);\r\n            }\r\n\r\n            public remove = function (query: IDelete, onSuccess: Function, onError: Function) {\r\n                var ObjDelete = new Remove(query, onSuccess, onError);\r\n            }\r\n\r\n            public get = function (query: ISelect, onSuccess: Function, onError: Function) {\r\n                new Get(query, onSuccess, onError);\r\n            }\r\n\r\n            public createDb = function (tableName, onSuccess: Function, onError: Function) {\r\n                var DbName = \"KeyStore\";\r\n                new InitDb(DbName, tableName, onSuccess, onError);\r\n            }\r\n        }\r\n    }\r\n}\r\n","module KeyStore {\r\n    /**\r\n     * Initialize KeyStore\r\n     * \r\n     */\r\n    export var init = function () {\r\n        Utils.setDbType();\r\n        if (indexedDB) {\r\n            prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n                Name: 'create_db',\r\n                Query: TableName\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n    * return the value by key\r\n    * \r\n    * @param {string} key \r\n    * @param {Function} onSuccess \r\n    * @param {Function} [onError=null] \r\n    */\r\n    export var get = function (key: string, onSuccess: Function, onError: Function = null) {\r\n        var Query = <ISelect>{\r\n            From: this.TableName,\r\n            Where: {\r\n                Key: key\r\n            }\r\n        };\r\n        prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n            Name: 'get',\r\n            Query: Query,\r\n            OnSuccess: onSuccess,\r\n            OnError: onError\r\n        });\r\n        return this;\r\n    };\r\n\r\n    /**\r\n    * insert or update value\r\n    * \r\n    * @param {any} key \r\n    * @param {any} value \r\n    * @param {Function} [onSuccess=null] \r\n    * @param {Function} [onError=null] \r\n    */\r\n    export var set = function (key, value, onSuccess: Function = null, onError: Function = null) {\r\n        var Query = <IInsert>{\r\n            TableName: this.TableName,\r\n            Set: {\r\n                Key: key,\r\n                Value: value\r\n            }\r\n        }\r\n        prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n            Name: 'set',\r\n            Query: Query,\r\n            OnSuccess: onSuccess,\r\n            OnError: onError\r\n        });\r\n        return this;\r\n    };\r\n\r\n    /**\r\n    * delete value\r\n    * \r\n    * @param {string} key \r\n    * @param {Function} [onSuccess=null] \r\n    * @param {Function} [onError=null] \r\n    */\r\n    export var remove = function (key: string, onSuccess: Function = null, onError: Function = null) {\r\n        var Query = <IDelete>{\r\n            From: this.TableName,\r\n            Where: {\r\n                Key: key\r\n            }\r\n        }\r\n        prcoessExecutionOfCode(<IWebWorkerRequest>{\r\n            Name: 'remove',\r\n            Query: Query,\r\n            OnSuccess: onSuccess,\r\n            OnError: onError\r\n        });\r\n        return this;\r\n    }\r\n}\r\n\r\nKeyStore.init();"]}